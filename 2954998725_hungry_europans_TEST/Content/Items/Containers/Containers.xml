<?xml version="1.0" encoding="utf-8"?>
<Override>
  <Items>
    <!-- CONTAINERS -->
    <Item name="Tool Belt with Lunch Box" identifier="he-toolbeltlunch" category="Equipment" subcategory="Container" tags="mediumitem,mobilecontainer,tool" cargocontaineridentifier="metalcrate" showcontentsintooltip="true" Scale="0.5" fireproof="true" description="A Tool Belt with a Lunch Box attached to it to always carry your food with you." impactsoundtag="impact_soft" canflipx="false">
      <PreferredContainer primary="engcab" />
      <PreferredContainer primary="wreckstoragecab,abandonedstoragecab" amount="1" spawnprobability="0.05" />
      <PreferredContainer primary="outpostcrewcabinet" amount="1" spawnprobability="0.1" />
      <Deconstruct time="10">
        <Item identifier="toolbelt" />
        <Item identifier="he-lunchbox" amount="1" />
      </Deconstruct>
      <Fabricate suitablefabricators="fabricator" requiredtime="20">
        <Item identifier="toolbelt" amount="1" />
        <Item identifier="he-lunchbox" amount="1" />
      </Fabricate>
      <Price baseprice="120" sold="false">
        <Price storeidentifier="merchantoutpost" minavailable="4" />
        <Price storeidentifier="merchantcity" minavailable="6" />
        <Price storeidentifier="merchantresearch" multiplier="1.25" minavailable="1" />
        <Price storeidentifier="merchantmilitary" multiplier="1.25" minavailable="1" />
        <Price storeidentifier="merchantmine" multiplier="1.25" minavailable="8" />
        <Price storeidentifier="merchantengineering" minavailable="4" multiplier="0.9" />
      </Price>
      <InventoryIcon texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" sourcerect="915,656,108,79" origin="0.5,0.5" />
      <Sprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" sourcerect="915,656,108,79" depth="0.6" />
      <Body width="108" height="79" density="15" />
      <Wearable slots="Bag" msg="ItemMsgEquipSelect" canbeselected="false" canbepicked="true" pickkey="Select">
        <sprite name="ToolBeltLunchBox" texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" sourcerect="915,656,108,79" limb="Torso" inherittexturescale="true" origin="0.6,-0.2" />
        <StatValue stattype="WalkingSpeed" value="-0.2" />
        <StatValue stattype="SwimmingSpeed" value="-0.2" />
      </Wearable>
      <Holdable canbepicked="true" slots="RightHand+LeftHand" holdpos="0,-70" handle1="-5,0" handle2="10,-20" holdangle="0" msg="ItemMsgPickUpUse" canbeselected="false" pickkey="Use" allowswappingwhenpicked="false" />
      <ItemContainer capacity="6" depth="0.5" slotsperrow="3">
        <SlotIcon slotindex="6" texture="%ModDir:2954998725%/Content/UI/HE-IconsAtlas.png" sourcerect="152,0,85,85" origin="0.5,0.5" />
        <SlotIcon slotindex="7" texture="%ModDir:2954998725%/Content/UI/HE-IconsAtlas.png" sourcerect="152,0,85,85" origin="0.5,0.5" />
        <SlotIcon slotindex="8" texture="%ModDir:2954998725%/Content/UI/HE-IconsAtlas.png" sourcerect="152,0,85,85" origin="0.5,0.5" />
        <SlotIcon slotindex="9" texture="%ModDir:2954998725%/Content/UI/HE-IconsAtlas.png" sourcerect="152,0,85,85" origin="0.5,0.5" />
        <SlotIcon slotindex="10" texture="%ModDir:2954998725%/Content/UI/HE-IconsAtlas.png" sourcerect="152,0,85,85" origin="0.5,0.5" />
        <SlotIcon slotindex="11" texture="%ModDir:2954998725%/Content/UI/HE-IconsAtlas.png" sourcerect="152,0,85,85" origin="0.5,0.5" />
        <SlotIcon slotindex="12" texture="%ModDir:2954998725%/Content/UI/HE-IconsAtlas.png" sourcerect="152,0,85,85" origin="0.5,0.5" />
        <SlotIcon slotindex="13" texture="%ModDir:2954998725%/Content/UI/HE-IconsAtlas.png" sourcerect="152,0,85,85" origin="0.5,0.5" />
        <SlotIcon slotindex="14" texture="%ModDir:2954998725%/Content/UI/HE-IconsAtlas.png" sourcerect="152,0,85,85" origin="0.5,0.5" />
        <SlotIcon slotindex="15" texture="%ModDir:2954998725%/Content/UI/HE-IconsAtlas.png" sourcerect="152,0,85,85" origin="0.5,0.5" />
        <SlotIcon slotindex="16" texture="%ModDir:2954998725%/Content/UI/HE-IconsAtlas.png" sourcerect="152,0,85,85" origin="0.5,0.5" />
        <SlotIcon slotindex="17" texture="%ModDir:2954998725%/Content/UI/HE-IconsAtlas.png" sourcerect="152,0,85,85" origin="0.5,0.5" />
        <Containable items="smallitem" excludeditems="toolbelt,toolbox,bandolier,he-toolbeltlunch" />
        <SubContainer capacity="6" depth="0.5" maxstacksize="1">
          <Containable items="fooditem,drinkitem,bottle,emptybottle,emptyjar" />
        </SubContainer>
      </ItemContainer>
      <Upgrade gameversion="0.10.0.0" scale="0.5" />
    </Item>
    <Item name="Lunch Box" identifier="he-lunchbox" category="Equipment" subcategory="Container" tags="mediumitem,mobilecontainer,tool" cargocontaineridentifier="metalcrate" showcontentsintooltip="true" Scale="0.5" fireproof="true" description="It's a box with a handle to carry your food around. Can be attached to a toolbelt at a fabricator." impactsoundtag="impact_metal_heavy" RequireAimToUse="True" canflipx="false">
      <PreferredContainer secondary="wreckstoragecab,abandonedstoragecab" amount="1" spawnprobability="0.05" />
      <PreferredContainer secondary="outpostcrewcabinet" amount="1" spawnprobability="0.1" />
      <Deconstruct time="10">
        <Item identifier="steel" />
      </Deconstruct>
      <Fabricate suitablefabricators="fabricator" requiredtime="20">
        <RequiredSkill identifier="mechanical" level="20" />
        <Item identifier="steel" amount="2" />
      </Fabricate>
      <Price baseprice="40">
        <Price storeidentifier="merchantoutpost" minavailable="0" maxavailable="6" />
        <Price storeidentifier="merchantcity" multiplier="0.9" minavailable="12" />
        <Price storeidentifier="merchantresearch" multiplier="1.25" minavailable="3" />
        <Price storeidentifier="merchantmilitary" multiplier="1.25" minavailable="5" />
        <Price storeidentifier="merchantmine" multiplier="1.25" minavailable="4" />
      </Price>
      <InventoryIcon texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" sourcerect="916,808,81,64" origin="0.5,0.5" />
      <Sprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" sourcerect="915,740,84,67" origin="0.5,0.5" depth="0.6" canflipx="false" />
      <Body width="84" height="67" density="12" />
      <MeleeWeapon slots="RightHand,LeftHand" controlpose="true" aimpos="45,10" handle1="0,18" holdangle="90" reload="1" range="50" combatpriority="6" msg="ItemMsgPickUpSelect">
        <Attack structuredamage="0" itemdamage="1" targetimpulse="2">
          <Affliction identifier="blunttrauma" strength="2" />
          <Affliction identifier="stun" strength="0.6" />
          <StatusEffect type="OnUse" target="UseTarget">
            <Conditional entitytype="eq Character" />
            <Sound file="Content/Items/Weapons/Smack1.ogg" selectionmode="random" range="500" />
            <Sound file="Content/Items/Weapons/Smack2.ogg" range="500" />
          </StatusEffect>
        </Attack>
      </MeleeWeapon>
      <ItemContainer capacity="9" slotsperrow="3" maxstacksize="1" keepopenwhenequipped="true" movableframe="true">
        <SlotIcon texture="%ModDir:2954998725%/Content/UI/HE-IconsAtlas.png" sourcerect="152,0,85,85" origin="0.5,0.5" />
        <Containable items="fooditem,drinkitem,bottle,emptybottle,emptyjar" />
      </ItemContainer>
      <aitarget sightrange="1000" soundrange="1000" fadeouttime="2" />
      <Upgrade gameversion="0.10.0.0" scale="0.5" />
    </Item>
    <Item name="Cooler Crate" identifier="he-coolercrate" category="Equipment" subcategory="Container" description="Used to prevent meat from spoiling. Needs a battery." tags="crate,kitchen,cooler,refrigeratedcontainer" scale="0.5" linkable="true" pickdistance="150" showcontentsintooltip="true" canflipx="false" impactsoundtag="impact_metal_heavy">
      <Deconstruct time="0.5" />
      <Sprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" depth="0.54" sourcerect="878,381,145,83" origin="0.5,0.5" />
      <Price baseprice="10" buyingpricemodifier="20.5" minleveldifficulty="0" sold="True">
        <Price storeidentifier="merchantoutpost" minavailable="0" maxavailable="2" />
        <Price storeidentifier="merchantcity" minavailable="1" maxavailable="4" />
        <Price storeidentifier="merchantresearch" maxavailable="1" />
        <Price storeidentifier="merchantmilitary" maxavailable="1" />
        <Price storeidentifier="merchantmine" maxavailable="1" />
      </Price>
      <Fabricate suitablefabricators="fabricator" requiredtime="20" requiresrecipe="false" amount="1">
        <RequiredSkill identifier="mechanical" level="25" />
        <RequiredItem identifier="steel" amount="4" />
      </Fabricate>
      <Body width="145" height="76" density="25" />
      <Holdable canbepicked="true" slots="RightHand,LeftHand" holdpos="0,-80" handle1="0,0" handle2="0,0" aimable="false" msg="ItemMsgPickUpSelect" />
      <LightComponent range="0.0" lightcolor="30,255,0,255" powerconsumption="0.5" IsOn="false" allowingameediting="false" offset="0,0">
        <sprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" sourcerect="1004,464,19,23" alpha="1.0" origin="-1.3,0.46" />
        <LightTexture texture="Content/Lights/pointlight_falloff.png" origin="0.5, 0.5" size="1.0,1.0" />
        <poweronsound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/CoolerPowerOn.ogg" range="500" loop="false" volume="8" />
        <StatusEffect type="OnActive" target="Contained" Condition="-0.05" interval="1" disabledeltatime="true" targetslot="0">
          <RequiredItem items="mobilebattery" targetslot="0" type="Contained" />
        </StatusEffect>
        <StatusEffect type="OnActive" target="Contained" Condition="0.025" interval="1" disabledeltatime="true" targetslot="0">
          <RequiredItem identifier="fulguriumbatterycell" targetslot="0" type="Contained" />
        </StatusEffect>
        <!-- Tag the container with "activecooling" when powered to allow or prevent StatusEffects checking for "activecooling" on contained items -->
        <StatusEffect type="OnActive" target="This" disabledeltatime="false" comparison="And" tags="activecooling" duration="0.1">
          <sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/Cooler.ogg" type="OnActive" range="300" loop="true" volume="3" />
        </StatusEffect>
      </LightComponent>
      <ItemContainer capacity="0" canbeselected="true" selectkey="Use" hideitems="true" containedstateindicatorstyle="battery" containedstateindicatorslot="0" keepopenwhenequipped="false" movableframe="true" msg="itemmsgopenuse">
        <SlotIcon slotindex="0" texture="Content/UI/ContainerIndicators.png" sourcerect="2,184,120,32" origin="0.5,0.5" />
        <SubContainer capacity="1" maxstacksize="1" spawnwithid="batterycell">
          <Containable items="mobilebattery">
            <StatusEffect type="OnContaining" target="This" Voltage="1.0" setvalue="true" />
          </Containable>
        </SubContainer>
        <SubContainer capacity="19">
          <Containable items="canspoil,canexpire,meat,fooditem,drinkitem,mobilebattery,peanutegg,psilotoadegg,orangeboyegg,balloonegg,mudraptoregg" excludeditems="toolbelt,toolbox,bandolier,cargoscooter" />
        </SubContainer>
      </ItemContainer>
      <CustomInterface canbeselected="false" drawhudwhenequipped="true">
        <GuiFrame style="ItemUI" absoluteoffset="0,0" anchor="BottomCenter" relativesize="0.07,0.08" />
        <TickBox text="interaction.onoff">
          <StatusEffect type="OnUse" target="This" IsOn="true" targetitemcomponent="LightComponent" setvalue="true">
            <Conditional IsOn="false" targetitemcomponent="LightComponent" />
          </StatusEffect>
          <StatusEffect type="OnSecondaryUse" target="This" IsOn="false" targetitemcomponent="LightComponent" setvalue="true">
            <Conditional IsOn="true" targetitemcomponent="LightComponent" />
          </StatusEffect>
        </TickBox>
      </CustomInterface>
    </Item>
    <Item name="Jar Crate" category="Equipment" subcategory="Container" description="A crate to store and carry your jars. Bottles don't fit." identifier="he-jarcrate" tags="container,kitchen,jarcrate" linkable="true" pickdistance="150" waterproof="false" impacttolerance="0.1" scale="0.5" canflipx="false" isshootable="true" impactsoundtag="impact_plastic_crate">
      <Sprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" depth="0.684" sourcerect="933,602,90,53" canflipx="false" origin="0.5,0.43" />
      <ContainedSprite allowedcontainertags="refillstation" texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" sourcerect="0,0,1,1" depth="0.55" origin="0.5,0.5" />
      <PreferredContainer primary="liquorcrateshelf" />
      <Body width="90" height="53" density="14" />
      <Deconstruct time="5">
        <Item identifier="plastic" amount="2" />
      </Deconstruct>
      <Fabricate suitablefabricators="fabricator" requiredtime="10" requiresrecipe="false" amount="1">
        <RequiredSkill identifier="mechanical" level="15" />
        <RequiredItem identifier="plastic" amount="4" />
      </Fabricate>
      <ItemContainer ItemsUseInventoryPlacement="true" capacity="8" maxstacksize="1" canbeselected="false" hideitems="false" itempos="-20,5" iteminterval="40,1" itemrotation="0" itemsperrow="2" slotsperrow="4" containedspritedepths="0.71,0.72,0.73,0.74,0.75,0.76,0.77,0.78,0.79,0.80,0.81,0.82,0.83,0.84,0.85" msg="ItemMsgInteractSelect" canflipx="false">
        <Containable items="jar,emptyjar" />
        <StatusEffect type="OnImpact" target="this">
          <RequiredItem items="jar,emptyjar" type="Contained" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Impact/LiquorCrateImpact1.ogg" volume="1" range="450" loop="false" selectionmode="random" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Impact/LiquorCrateImpact2.ogg" volume="1" range="450" loop="false" selectionmode="random" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Impact/LiquorCrateImpact2.ogg" volume="1" range="450" loop="false" selectionmode="random" />
        </StatusEffect>
      </ItemContainer>
      <Holdable canbepicked="true" slots="RightHand+LeftHand" holdpos="0,-50" handle1="0,14" handle2="-1,3" holdangle="45" aimpos="65,-10" attachable="false" aimable="false"></Holdable>
    </Item>
    <Item name="Liquor Crate" category="Equipment" subcategory="Container" description="A crate to store and carry your bottles. Jars don't fit." identifier="he-liquorcrate" tags="container,kitchen,liquorcrate" linkable="true" pickdistance="150" waterproof="false" impacttolerance="0.1" scale="0.5" canflipx="false" isshootable="true" impactsoundtag="impact_plastic_crate">
      <Sprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" depth="0.684" sourcerect="933,548,90,53" canflipx="false" origin="0.5,0.43" />
      <ContainedSprite allowedcontainertags="refillstation" texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" sourcerect="0,0,1,1" depth="0.55" origin="0.5,0.5" />
      <PreferredContainer primary="liquorcrateshelf" />
      <Body width="90" height="53" density="14" />
      <Deconstruct time="5">
        <Item identifier="plastic" amount="2" />
      </Deconstruct>
      <Fabricate suitablefabricators="fabricator" requiredtime="10" requiresrecipe="false" amount="1">
        <RequiredSkill identifier="mechanical" level="15" />
        <RequiredItem identifier="plastic" amount="4" />
      </Fabricate>
      <ItemContainer ItemsUseInventoryPlacement="true" capacity="20" maxstacksize="1" canbeselected="false" hideitems="false" itempos="-30,4" iteminterval="20,1" itemrotation="0" itemsperrow="4" slotsperrow="4" containedspritedepths="0.71,0.72,0.73,0.74,0.75,0.76,0.77,0.78,0.79,0.80,0.81,0.82,0.83,0.84,0.85,0.86,0.87,0.88,0.89,0.90" msg="ItemMsgInteractSelect" canflipx="false">
        <Containable items="bottle,emptybottle" />
        <StatusEffect type="OnImpact" target="this">
          <RequiredItem items="bottle,emptybottle" type="Contained" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Impact/LiquorCrateImpact1.ogg" volume="1" range="450" loop="false" selectionmode="random" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Impact/LiquorCrateImpact2.ogg" volume="1" range="450" loop="false" selectionmode="random" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Impact/LiquorCrateImpact2.ogg" volume="1" range="450" loop="false" selectionmode="random" />
        </StatusEffect>
      </ItemContainer>
      <Holdable canbepicked="true" slots="RightHand+LeftHand" holdpos="0,-50" handle1="0,14" handle2="-1,3" holdangle="45" aimpos="65,-10" attachable="false" aimable="false"></Holdable>
    </Item>
    <Item name="Couwola Cola Crate" category="Equipment" subcategory="Container" description="A crate from Couwola Cola to store and carry your bottles. Jars don't fit." identifier="he-colacrate" tags="container,kitchen,liquorcrate" linkable="true" pickdistance="150" waterproof="false" impacttolerance="0.1" scale="0.5" canflipx="false" isshootable="true" impactsoundtag="impact_plastic_crate">
      <Sprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" depth="0.684" sourcerect="933,494,90,53" canflipx="false" origin="0.5,0.43" />
      <ContainedSprite allowedcontainertags="refillstation" texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" sourcerect="0,0,1,1" depth="0.55" origin="0.5,0.5" />
      <PreferredContainer primary="liquorcrateshelf" />
      <Body width="90" height="53" density="14" />
      <Deconstruct time="5">
        <Item identifier="plastic" amount="2" />
      </Deconstruct>
      <ItemContainer ItemsUseInventoryPlacement="true" capacity="20" maxstacksize="1" canbeselected="false" hideitems="false" itempos="-30,4" iteminterval="20,1" itemrotation="0" itemsperrow="4" slotsperrow="4" containedspritedepths="0.71,0.72,0.73,0.74,0.75,0.76,0.77,0.78,0.79,0.80,0.81,0.82,0.83,0.84,0.85,0.86,0.87,0.88,0.89,0.90" msg="ItemMsgInteractSelect" canflipx="false">
        <Containable items="bottle,emptybottle" />
        <StatusEffect type="OnImpact" target="this">
          <RequiredItem items="bottle,emptybottle" type="Contained" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Impact/LiquorCrateImpact1.ogg" volume="1" range="450" loop="false" selectionmode="random" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Impact/LiquorCrateImpact2.ogg" volume="1" range="450" loop="false" selectionmode="random" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Impact/LiquorCrateImpact2.ogg" volume="1" range="450" loop="false" selectionmode="random" />
        </StatusEffect>
      </ItemContainer>
      <Holdable canbepicked="true" slots="RightHand+LeftHand" holdpos="0,-50" handle1="0,14" handle2="-1,3" holdangle="45" aimpos="65,-10" attachable="false" aimable="false"></Holdable>
    </Item>
    <Item name="Liquor Crate Shelf" category="Misc" subcategory="Container" description="A shelf to store up to 4 of your liquor and jar crates." identifier="he-liquorcrateshelf" tags="container,liquorcrateshelf" linkable="true" allowedlinks="kitchen,kitchenfabricator" canflipx="false" pickdistance="150" scale="0.5" isshootable="true" requireaimtouse="true">
      <Sprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" depth="0.799" sourcerect="621,1,128,364" origin="0.5,0.47" />
      <Body width="128" height="364" density="18" />
      <Deconstruct time="5">
        <Item identifier="steel" amount="3" />
      </Deconstruct>
      <Fabricate suitablefabricators="fabricator" requiredtime="15" requiresrecipe="false" amount="1">
        <RequiredSkill identifier="mechanical" level="35" />
        <RequiredItem identifier="steel" amount="6" />
      </Fabricate>
      <Holdable canbepicked="true" selectkey="Select" pickkey="Action" slots="RightHand+LeftHand" holdpos="80,-30" handle1="0,0" handle2="10,-20" holdangle="-20" msg="ItemMsgDetachWrench" PickingTime="5.0" aimpos="65,-10" attachable="true" aimable="true">
        <RequiredItem items="wrench" type="Equipped" />
        <StatusEffect target="This" type="OnContained">
          <Conditional attached="false" targetitemcomponentname="Holdable" />
          <DropContainedItems />
        </StatusEffect>
        <StatusEffect type="OnActive" target="Character" SpeedMultiplier="0.6" PropulsionSpeedMultiplier="0.6" setvalue="true" duration="0.1" />
      </Holdable>
      <ItemContainer ItemsUseInventoryPlacement="true" capacity="4" maxstacksize="1" slotsperrow="1" canbeselected="true" hideitems="false" itempos="64,-62" iteminterval="0,-92" msg="ItemMsgInteractSelect">
        <GuiFrame relativesize="0.15,0.6" anchor="Center" style="ItemUI" />
        <Containable items="liquorcrate,jarcrate,smallcrate" />
      </ItemContainer>
    </Item>
    <Item name="Liquor Crate Shelf (Small)" category="Misc" subcategory="Container" description="A small shelf to store up to 2 of your liquor and jar crates." identifier="he-liquorcrateshelfsmall" tags="container,liquorcrateshelf" linkable="true" allowedlinks="kitchen,kitchenfabricator" canflipx="false" pickdistance="150" scale="0.5" isshootable="true" requireaimtouse="true">
      <Sprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" depth="0.799" sourcerect="621,1,128,181" origin="0.5,0.465" />
      <Body width="128" height="181" density="14" />
      <Deconstruct time="5">
        <Item identifier="steel" amount="1" />
      </Deconstruct>
      <Fabricate suitablefabricators="fabricator" requiredtime="15" requiresrecipe="false" amount="1">
        <RequiredSkill identifier="mechanical" level="35" />
        <RequiredItem identifier="steel" amount="3" />
      </Fabricate>
      <Holdable canbepicked="true" selectkey="Select" pickkey="Action" slots="RightHand+LeftHand" holdpos="70,-40" handle1="0,0" handle2="10,-20" holdangle="0" msg="ItemMsgDetachWrench" PickingTime="5.0" aimpos="65,-10" attachable="true" aimable="true">
        <RequiredItem items="wrench" type="Equipped" />
        <StatusEffect target="This" type="OnContained">
          <Conditional attached="false" targetitemcomponentname="Holdable" />
          <DropContainedItems />
        </StatusEffect>
        <StatusEffect type="OnActive" target="Character" SpeedMultiplier="0.8" PropulsionSpeedMultiplier="0.8" setvalue="true" duration="0.1" />
      </Holdable>
      <ItemContainer ItemsUseInventoryPlacement="true" capacity="2" maxstacksize="1" slotsperrow="1" canbeselected="true" hideitems="false" itempos="64,-57" iteminterval="0,-92" msg="ItemMsgInteractSelect">
        <GuiFrame relativesize="0.15,0.3" anchor="Center" style="ItemUI" />
        <Containable items="liquorcrate,jarcrate,smallcrate" />
      </ItemContainer>
    </Item>
    <Item name="Liquor Display Shelf" category="Misc" subcategory="Container" description="A shelf to display and store your bottles. Jars don't fit." identifier="he-liquordisplayshelf" tags="liquorshelf,liquordisplay" linkable="true" pickdistance="150" waterproof="false" scale="0.5" canflipx="false" isshootable="true">
      <Sprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" depth="0.797" sourcerect="0,506,225,180" canflipx="false" origin="0.5,0.5" />
      <DecorativeSprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" depth="0.799" sourcerect="226,506,225,180" canflipx="false" origin="0.5,0.5" />
      <BrokenSprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" sourcerect="0,687,389,180" depth="0.797" origin="0.5,0.5" maxcondition="99" fadein="false" />
      <!-- ItemComponent component is used as a workaround to play a sound if someone stopped interacting with the container since that can't really be done otherwise other than with "Always" StatusEffects which drain performance nonstop instead of only when interaction is happening. -->
      <ItemComponent canbeselected="false" canbepicked="false" allowingameediting="false" maxflow="0" powerconsumption="0" isActive="false">
        <!-- play a closing sound and disable the ItemComponent, stopping to execute the check for the "opened" tag which gets applied while someone is interacting with the container -->
        <StatusEffect type="OnActive" target="This" targetitemcomponent="ItemComponent" isActive="false" condition="100" setvalue="true" forceplaysounds="true">
          <Conditional HasStatusTag="neq opened" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/cabinet_interact2.ogg" volume="2" range="400" selectionmode="random" />
        </StatusEffect>
      </ItemComponent>
      <!-- Controller to check if someone is interacting with the container -->
      <Controller canbeselected="true" selectkey="Select" hidehud="false" drawuserbehind="false" noninteractablewhenflippedy="false" allowingameediting="false" drawhudwhenequipped="false" comparison="And">
        <!-- play an opening sound when starting to interact with the container -->
        <StatusEffect type="OnActive" target="this" forceplaysounds="true">
          <Conditional HasStatusTag="neq opened" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/cabinet_interact1.ogg" volume="2" range="400" selectionmode="random" />
        </StatusEffect>
        <!-- tag the container with "opened" if the controller is active, meaning someone is interacting with it -->
        <StatusEffect type="OnActive" target="This" tags="opened" duration="0.1" />
        <!-- turn the ItemComponent on so we can play a sound when the user stops interacting with the container. Would otherwise require an "Always" check which would always run and thus impact performance. -->
        <StatusEffect type="OnActive" target="This" targetitemcomponent="ItemComponent" isActive="true" condition="99" setvalue="true" />
        <!-- prevent allowing to configure an output for the controller to hide the controller UI. This StatusEffect only executes once per round -->
        <StatusEffect type="OnActive" target="This" targetitemcomponent="Controller" allowingameediting="false" setvalue="true" oneshot="true" />
      </Controller>
      <Body width="225" height="180" density="18" />
      <Deconstruct time="5">
        <Item identifier="he-glassfragments" amount="2" />
        <Item identifier="steel" amount="1" />
      </Deconstruct>
      <Fabricate suitablefabricators="fabricator" requiredtime="15" requiresrecipe="false" amount="1">
        <RequiredSkill identifier="mechanical" level="35" />
        <RequiredItem identifier="he-glassfragments" amount="4" />
        <RequiredItem identifier="steel" amount="3" />
      </Fabricate>
      <ItemContainer ItemsUseInventoryPlacement="true" capacity="12" maxstacksize="1" canbeselected="true" hideitems="false" itempos="36,-52" iteminterval="30,-80" itemrotation="0" itemsperrow="6" slotsperrow="6" containedspritedepths="0.798,0.798,0.798,0.798,0.798,0.798,0.799,0.799,0.799,0.799,0.799,0.799" msg="ItemMsgInteractSelect" canflipx="false">
        <Containable items="bottle,emptybottle" />
        <GuiFrame relativesize="0.3,0.2" anchor="BottomCenter" pivot="BottomCenter" relativeoffset="0,0.4" style="ItemUI" />
      </ItemContainer>
      <!--
      <ItemContainer capacity="12" maxstacksize="1" canbeselected="true" hideitems="false" itempos="36,-132" iteminterval="30,0.1" itemrotation="0" itemsperrow="6" slotsperrow="6" containedspritedepths="0.798,0.798,0.798,0.798,0.798,0.798,0.799,0.799,0.799,0.799,0.799,0.799" msg="ItemMsgInteractSelect" canflipx="false">
        <Containable items="bottle,emptybottle" />
        <GuiFrame relativesize="0.3,0.2" anchor="BottomCenter" pivot="BottomCenter" relativeoffset="0,0.3" style="ItemUI" />
        <StatusEffect type="OnPicked" target="this">
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/cabinet_interact1.ogg" volume="2" range="400" selectionmode="random"/>
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/cabinet_interact2.ogg" volume="2" range="400" selectionmode="random"/>
        </StatusEffect>
      </ItemContainer>-->
      <Holdable canbepicked="true" slots="RightHand+LeftHand" selectkey="Select" pickkey="Action" msg="ItemMsgDetachWrench" holdpos="0,-50" handle1="0,14" handle2="-1,3" holdangle="45" aimpos="65,-10" attachable="true" attachedbydefault="true" aimable="false" AttachesToFloor="false" DisallowAttachingOverTags="liquordisplay">
        <RequiredItem items="wrench" type="Equipped" />
        <StatusEffect target="This" type="OnContained">
          <Conditional attached="false" targetitemcomponentname="Holdable" />
          <DropContainedItems />
        </StatusEffect>
      </Holdable>
    </Item>
    <Item name="Kitchen Counter" identifier="he-kitchencounter" tags="kitchen,kitchencounter,locker,container" linkable="true" category="Misc" subcategory="Container" description="Can store up to 18 different small or medium items and refill empty bottles and kegs with sea water." pickdistance="150" waterproof="false" isshootable="true" scale="0.5">
      <Sprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" depth="0.798" sourcerect="0,0,507,299" origin="0.5,0.5" />
      <DecorativeSprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" sourcerect="390,687,493,185" depth="0.81" scale="1" offset="0,-45" origin="0.5,0.5" />
      <DecorativeSprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" sourcerect="0,868,318,149" depth="0.796" origin="0.049,-0.022">
        <Conditional HasStatusTag="opened" />
      </DecorativeSprite>
      <!-- ItemComponent is used as a workaround to play a sound if someone stopped interacting with the container since that can't really be done otherwise other than with "Always" StatusEffects which drain performance nonstop instead of only when interaction is happening. -->
      <ItemComponent canbeselected="false" canbepicked="false" allowingameediting="false" maxflow="0" powerconsumption="0" isActive="false">
        <!-- play a closing sound and disable the ItemComponent, stopping to execute the check for the "opened" tag which gets applied while someone is interacting with the container -->
        <StatusEffect type="OnActive" target="This" targetitemcomponent="ItemComponent" isActive="false" setvalue="true" forceplaysounds="true">
          <Conditional HasStatusTag="neq opened" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/locker_close2.ogg" volume="2" range="250" frequencymultiplier="1.5" selectionmode="Random" />
        </StatusEffect>
      </ItemComponent>
      <!-- Controller to check if someone is interacting with the container -->
      <Controller canbeselected="true" selectkey="Select" hidehud="false" drawuserbehind="false" noninteractablewhenflippedy="false" allowingameediting="false" drawhudwhenequipped="false" comparison="And">
        <!-- play an opening sound when starting to interact with the container -->
        <StatusEffect type="OnActive" target="this" forceplaysounds="true">
          <Conditional HasStatusTag="neq opened" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/locker_open1.ogg" volume="2" range="250" frequencymultiplier="1.5" selectionmode="Random" />
        </StatusEffect>
        <!-- tag the container with "opened" if the controller is active, meaning someone is interacting with it -->
        <StatusEffect type="OnActive" target="This" tags="opened" duration="0.1" />
        <!-- turn the ItemComponent component on so we can play a sound when the user stops interacting with the container. Would otherwise require an "Always" check which would always run and thus impact performance. -->
        <StatusEffect type="OnActive" target="This" targetitemcomponent="ItemComponent" isActive="true" setvalue="true" />
        <!-- prevent allowing to configure an output for the controller to hide the controller UI. This StatusEffect only executes once per round -->
        <StatusEffect type="OnActive" target="This" targetitemcomponent="Controller" allowingameediting="false" setvalue="true" oneshot="true" />
      </Controller>
      <Price baseprice="899" sold="true">
        <Price storeidentifier="merchantoutpost" multiplier="1.7" minavailable="0" maxavailable="1" />
        <Price storeidentifier="merchantcity" multiplier="1.0" minavailable="1" maxavailable="3" />
      </Price>
      <Deconstruct time="10">
        <Item identifier="steel" amount="2" />
        <Item identifier="titaniumaluminiumalloy" amount="2" />
      </Deconstruct>
      <Fabricate suitablefabricators="fabricator" requiredtime="60" requiresrecipe="false" amount="1">
        <RequiredSkill identifier="mechanical" level="65" />
        <RequiredItem identifier="steel" amount="6" />
        <RequiredItem identifier="titaniumaluminiumalloy" amount="4" />
      </Fabricate>
      <ItemContainer capacity="20" canbeselected="true" hideitems="true" msg="ItemMsgInteractSelect">
        <GuiFrame relativesize="0.25,0.45" anchor="Center" style="ItemUI" />
        <!--Water Icon-->
        <!-- <SlotIcon slotindex="0" texture="%ModDir:2954998725%/Content/UI/HE-IconsAtlas.png" sourcerect="577,0,85,85" origin="0.5,0.5" /> -->
        <!--PickUp Icon-->
        <!-- <SlotIcon slotindex="1" texture="%ModDir:2954998725%/Content/UI/HE-IconsAtlas.png" sourcerect="662,0,85,85" origin="0.5,0.5" /> -->
        <!--Regular Slots-->
        <Containable items="smallitem,mediumitem,peanutegg,psilotoadegg,orangeboyegg,balloonegg,mudraptoregg,crawleregg,petraptoregg,tigerthresheregg" excludedidentifiers="mobilecontainer" />
        <!--Toolbelt/Backpack Slots-->
        <SubContainer capacity="3" maxstacksize="1">
          <SlotIcon texture="Content/UI/CommandUIAtlas.png" sourcerect="639,926,128,80" origin="0.5,0.5" />
          <Containable items="mobilecontainer" />
        </SubContainer>
      </ItemContainer>
      <Body width="507" height="300" density="30" />
      <Holdable canbepicked="true" selectkey="Select" pickkey="Action" slots="RightHand+LeftHand" holdpos="155,-50" handle1="-220,60" handle2="-220,80" holdangle="0" msg="ItemMsgDetachWrench" PickingTime="15.0" aimpos="155,-50" attachable="true" aimable="true" AttachesToFloor="true" DisallowAttachingOverTags="kitchensink,kitchencounter">
        <RequiredItem items="wrench" type="Equipped" />
        <StatusEffect target="This" type="OnContained">
          <Conditional attached="false" targetitemcomponentname="Holdable" />
          <DropContainedItems />
        </StatusEffect>
        <StatusEffect type="OnActive" target="Character" SpeedMultiplier="0.3" PropulsionSpeedMultiplier="0.3" setvalue="true" duration="0.1" />
      </Holdable>
      <PowerTransfer canbeselected="false" CanBeOverloaded="false" FireProbability="0" msg="ItemMsgInteractSelect">
        <GuiFrame relativesize="0.2,0.14" minsize="450,160" anchor="Center" style="ItemUI" />
        <!--minsize="350,160" maxsize="420,190"-->
        <StatusEffect type="InWater" target="This" condition="-0.25">
          <Conditional voltage="gt 0.1" />
        </StatusEffect>
      </PowerTransfer>
      <ConnectionPanel selectkey="Action" canbeselected="true" msg="ItemMsgRewireScrewdriver" hudpriority="10">
        <GuiFrame relativesize="0.2,0.32" minsize="400,350" maxsize="480,420" anchor="Center" style="ConnectionPanel" />
        <RequiredSkill identifier="electrical" level="55" />
        <StatusEffect type="OnFailure" target="Character" targetlimbs="LeftHand,RightHand" AllowWhenBroken="true">
          <Sound file="Content/Sounds/Damage/Electrocution1.ogg" range="1000" />
          <Explosion range="100.0" force="1.0" flames="false" shockwave="false" sparks="true" underwaterbubble="false" />
          <Affliction identifier="stun" strength="4" probability="0.5" />
          <Affliction identifier="electricshock" strength="60" />
          <Affliction identifier="burn" strength="5" />
          <ParticleEmitter particle="ElectricShock" DistanceMin="10" DistanceMax="25" ParticleAmount="5" ScaleMin="0.1" ScaleMax="0.12" />
        </StatusEffect>
        <RequiredItem items="screwdriver" type="Equipped" />
        <output name="power" displayname="connection.power" />
      </ConnectionPanel>
    </Item>
    <Item name="Kitchen Pantry" identifier="he-kitchencounter2" tags="kitchen,kitchencounter,locker,container" linkable="true" category="Misc" subcategory="Container" description="Can store up to 30 different small items." pickdistance="150" waterproof="true" isshootable="true" scale="0.5">
      <Sprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" depth="0.798" sourcerect="0,301,405,204" origin="0.5,0.5" />
      <DecorativeSprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" sourcerect="0,868,318,149" depth="0.795" origin="0.21,0.275">
        <Conditional HasStatusTag="opened" />
      </DecorativeSprite>
      <DecorativeSprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" sourcerect="0,868,157,149" depth="0.796" origin="1.595,0.275">
        <Conditional HasStatusTag="opened" />
      </DecorativeSprite>
      <!-- ItemComponent used as a workaround to play a sound if someone stopped interacting with the container since that can't really be done otherwise other than with "Always" StatusEffects which drain performance nonstop instead of only when interaction is happening. -->
      <ItemComponent canbeselected="false" canbepicked="false" allowingameediting="false" IsActive="false">
        <!-- play a closing sound and disable the ItemComponent, stopping to execute the check for the "opened" tag which gets applied while someone is interacting with the container -->
        <StatusEffect type="OnActive" target="This" targetitemcomponent="ItemComponent" IsActive="false" setvalue="true" forceplaysounds="true">
          <Conditional HasStatusTag="neq opened" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/locker_close2.ogg" volume="2" range="250" frequencymultiplier="1.5" selectionmode="Random" />
        </StatusEffect>
      </ItemComponent>
      <!-- Controller to check if someone is interacting with the container -->
      <Controller canbeselected="true" selectkey="Select" hidehud="false" drawuserbehind="false" noninteractablewhenflippedy="false" allowingameediting="false" drawhudwhenequipped="false" comparison="And">
        <!-- play an opening sound when starting to interact with the container -->
        <StatusEffect type="OnActive" target="this" forceplaysounds="true">
          <Conditional HasStatusTag="neq opened" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/locker_open1.ogg" volume="2" range="250" frequencymultiplier="1.5" selectionmode="Random" />
        </StatusEffect>
        <!-- tag the container with "opened" if the controller is active, meaning someone is interacting with it -->
        <StatusEffect type="OnActive" target="This" tags="opened" duration="0.1" />
        <!-- turn the ItemComponent on so we can play a sound when the user stops interacting with the container. Would otherwise require an "Always" check which would always run and thus impact performance. -->
        <StatusEffect type="OnActive" target="This" targetitemcomponent="ItemComponent" IsActive="true" setvalue="true" />
        <!-- prevent allowing to configure an output for the controller to hide the controller UI. This StatusEffect only executes once per round -->
        <StatusEffect type="OnActive" target="This" targetitemcomponent="Controller" allowingameediting="false" setvalue="true" oneshot="true" />
      </Controller>
      <Price baseprice="1149" sold="true">
        <Price storeidentifier="merchantoutpost" multiplier="1.7" minavailable="0" maxavailable="1" />
        <Price storeidentifier="merchantcity" multiplier="1.0" minavailable="1" maxavailable="3" />
      </Price>
      <Deconstruct time="10">
        <Item identifier="steel" amount="4" />
        <Item identifier="titaniumaluminiumalloy" amount="2" />
      </Deconstruct>
      <Fabricate suitablefabricators="fabricator" requiredtime="60" requiresrecipe="false" amount="1">
        <RequiredSkill identifier="mechanical" level="65" />
        <RequiredItem identifier="steel" amount="8" />
        <RequiredItem identifier="titaniumaluminiumalloy" amount="4" />
      </Fabricate>
      <ItemContainer capacity="30" canbeselected="true" slotsperrow="6" hideitems="true" msg="ItemMsgInteractSelect">
        <GuiFrame relativesize="0.35,0.55" anchor="Center" style="ItemUI" />
        <Containable items="smallitem,mediumitem,peanutegg,psilotoadegg,orangeboyegg,balloonegg,mudraptoregg,crawleregg,petraptoregg,tigerthresheregg" excludedidentifiers="mobilecontainer" />
        <SubContainer capacity="3" maxstacksize="1">
          <SlotIcon texture="Content/UI/CommandUIAtlas.png" sourcerect="639,926,128,80" origin="0.5,0.5" />
          <Containable items="mobilecontainer" />
        </SubContainer>
        <!-- Disabled due to OnClose only working for doors. No way to check if a player stops interacting to play the sound.
      <StatusEffect type="OnClose" target="this">
        <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/locker_close1.ogg" volume="1" range="500" selectionmode="random"/>
        <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/locker_close2.ogg" volume="1" range="500" selectionmode="random"/>
        <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/locker_close3.ogg" volume="1" range="500" selectionmode="random"/>
      </StatusEffect>-->
      </ItemContainer>
      <Body width="405" height="204" density="30" />
      <Holdable canbepicked="true" selectkey="Select" pickkey="Action" slots="RightHand+LeftHand" holdpos="155,-105" handle1="-170,60" handle2="-160,80" holdangle="0" msg="ItemMsgDetachWrench" PickingTime="15.0" aimpos="155,-50" attachable="true" aimable="true" AttachesToFloor="true" DisallowAttachingOverTags="kitchensink,kitchencounter">
        <RequiredItem items="wrench" type="Equipped" />
        <StatusEffect target="This" type="OnContained">
          <Conditional attached="false" targetitemcomponentname="Holdable" />
          <DropContainedItems />
        </StatusEffect>
        <StatusEffect type="OnActive" target="Character" SpeedMultiplier="0.3" PropulsionSpeedMultiplier="0.3" setvalue="true" duration="0.1" />
      </Holdable>
    </Item>
    <Item name="Cafeteria Cart" identifier="he-cafeteriacart" tags="kitchen,locker,container" linkable="true" category="Misc" subcategory="Container" description="Can store up to 30 different small items." pickdistance="150" waterproof="false" isshootable="true" scale="0.5">
      <Sprite texture="Content/Map/Outposts/Art/CafeteriaGardenAssets.png" sourcerect="2,647,191,329" depth="0.581" premultiplyalpha="false" origin="0.5,0.5" />
      <Price baseprice="450" sold="true">
        <Price storeidentifier="merchantoutpost" multiplier="1.7" minavailable="0" maxavailable="1" />
        <Price storeidentifier="merchantcity" multiplier="1.0" minavailable="1" maxavailable="3" />
      </Price>
      <Deconstruct time="10">
        <Item identifier="steel" amount="2" />
        <Item identifier="rubber" amount="1" />
      </Deconstruct>
      <Fabricate suitablefabricators="fabricator" requiredtime="60" requiresrecipe="false" amount="1">
        <RequiredSkill identifier="mechanical" level="35" />
        <RequiredItem identifier="steel" amount="5" />
        <RequiredItem identifier="rubber" amount="3" />
        <RequiredItem identifier="aluminium" amount="2" />
      </Fabricate>
      <ItemContainer ItemsUseInventoryPlacement="true" capacity="30" canbeselected="true" selectkey="Select" hideitems="true" msg="ItemMsgInteractSelect">
        <GuiFrame relativesize="0.25,0.55" anchor="Center" style="ItemUI" />
        <SlotIcon texture="%ModDir:2954998725%/Content/UI/HE-IconsAtlas.png" sourcerect="152,0,85,85" origin="0.5,0.5" />
        <Containable items="fooditem,drinkitem,emptybottle,emptyjar,kettle,tableware" />
        <StatusEffect type="OnPicked" target="this">
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/locker_open1.ogg" volume="2" range="400" selectionmode="random" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/locker_open2.ogg" volume="2" range="400" selectionmode="random" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/locker_open3.ogg" volume="2" range="400" selectionmode="random" />
        </StatusEffect>
      </ItemContainer>
      <Body width="191" height="322" density="16" friction="0.2" />
      <Holdable canbepicked="true" selectkey="Select" pickkey="Action" slots="RightHand+LeftHand" holdpos="70,-58" handle1="-75,50" handle2="-75,70" holdangle="3" msg="ItemMsgDetach" PickingTime="0.5" attachable="false" aimable="true">
        <StatValue stattype="WalkingSpeed" value="-0.5" />
        <StatValue stattype="SwimmingSpeed" value="-0.7" />
      </Holdable>
    </Item>
    <Item name="Refrigerator" identifier="he-refrigerator" tags="kitchen,locker,container,refrigerator" category="Misc" subcategory="Container" description="Prevents spoilage. Can only store food and drinks. Needs power." linkable="true" pickdistance="150" waterproof="true" fireproof="true" isshootable="true" scale="0.5">
      <Sprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" depth="0.799" sourcerect="750,0,273,380" origin="0.5,0.5" />
      <!-- Closed Doors Sprite -->
      <DecorativeSprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" sourcerect="1262,342,273,273" depth="0.797" origin="0.5,0.5">
        <Conditional HasStatusTag="neq opened" />
      </DecorativeSprite>
      <!-- Open Doors Sprite -->
      <DecorativeSprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" sourcerect="1024,0,449,341" depth="0.795" origin="0.5,0.5">
        <Conditional HasStatusTag="opened" />
      </DecorativeSprite>
      <!-- Decorative Contents Sprite -->
      <DecorativeSprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" sourcerect="1254,618,268,300" depth="0.798" origin="0.5,0.5">
        <Conditional HasTag="smallitem" targetcontaineditem="true" />
      </DecorativeSprite>
      <!-- ItemComponent used as a workaround to play a sound if someone stopped interacting with the container since that can't really be done otherwise other than with "Always" StatusEffects which drain performance nonstop instead of only when interaction is happening. -->
      <ItemComponent canbeselected="false" canbepicked="false" allowingameediting="false" IsActive="false">
        <!-- play a closing sound and disable the ItemComponent, stopping to execute the check for the "opened" tag which gets applied while someone is interacting with the container -->
        <StatusEffect type="OnActive" target="This" targetitemcomponent="ItemComponent" IsActive="false" setvalue="true" forceplaysounds="true">
          <Conditional HasStatusTag="neq opened" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/locker_close2.ogg" volume="2" range="250" frequencymultiplier="1.5" selectionmode="Random" />
        </StatusEffect>
      </ItemComponent>
      <!-- Controller to check if someone is interacting with the container -->
      <Controller canbeselected="true" selectkey="Select" hidehud="false" drawuserbehind="false" noninteractablewhenflippedy="false" allowingameediting="false" drawhudwhenequipped="false" comparison="And">
        <!-- play an opening sound when starting to interact with the container -->
        <StatusEffect type="OnActive" target="this" forceplaysounds="true">
          <Conditional HasStatusTag="neq opened" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/refrigerator_interact.ogg" volume="2" range="400" selectionmode="random" />
        </StatusEffect>
        <!-- tag the container with "opened" if the controller is active, meaning someone is interacting with it -->
        <StatusEffect type="OnActive" target="This" tags="opened" duration="0.1" />
        <!-- turn the ItemComponent on so we can play a sound when the user stops interacting with the container. Would otherwise require an "Always" check which would always run and thus impact performance. -->
        <StatusEffect type="OnActive" target="This" targetitemcomponent="ItemComponent" IsActive="true" setvalue="true" />
        <!-- prevent allowing to configure an output for the controller to hide the controller UI. This StatusEffect only executes once per round -->
        <StatusEffect type="OnActive" target="This" targetitemcomponent="Controller" allowingameediting="false" setvalue="true" oneshot="true" />
      </Controller>
      <Price baseprice="1599" sold="true">
        <Price storeidentifier="merchantoutpost" multiplier="1.7" minavailable="0" maxavailable="1" />
        <Price storeidentifier="merchantcity" multiplier="1.0" minavailable="1" maxavailable="3" />
      </Price>
      <Deconstruct time="10">
        <Item identifier="steel" amount="4" />
        <Item identifier="titaniumaluminiumalloy" amount="2" />
      </Deconstruct>
      <Fabricate suitablefabricators="fabricator" requiredtime="60" requiresrecipe="false" amount="1">
        <RequiredSkill identifier="mechanical" level="65" />
        <RequiredItem identifier="steel" amount="8" />
        <RequiredItem identifier="titaniumaluminiumalloy" amount="3" />
        <RequiredItem identifier="fpgacircuit" amount="5" />
      </Fabricate>
      <!--
      <Powered powerconsumption="200" currpowerconsumption="200" isactive="true">
        <GuiFrame relativesize="0.18,0.15" minsize="350,160" maxsize="420,192" anchor="Center" relativeoffset="0,-0.1" style="ItemUI" msg="ItemMsgInteractSelect" />
        Tag the container with "activecooling" when powered to allow or prevent StatusEffects checking for "activecooling" on contained items 
        <StatusEffect type="OnActive" target="This" disabledeltatime="false" tags="activecooling" duration="0.1">
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/Refrigerator.ogg" volume="2" range="500" loop="true" />
        </StatusEffect>
      </Powered>
      -->
      <PowerContainer capacity="300.0" maxrechargespeed="125.0" rechargespeed="125.0" maxoutput="1000.0" canbeselected="true" indicatorposition="5,10" indicatorsize="46,22" ishorizontal="true" msg="ItemMsgInteractSelect">
        <GuiFrame relativesize="0.25,0.23" minsize="350,200" anchor="Center" style="ItemUI" />
        <!--minsize="350,250" maxsize="420,300"-->
        <!-- Tag the container with "activecooling" when powered to allow or prevent StatusEffects checking for "activecooling" on contained items -->
        <StatusEffect type="OnActive" target="This" charge="-1" />
        <StatusEffect type="OnActive" target="This" disabledeltatime="false" tags="activecooling" duration="0.1">
          <Conditional Charge="gt 0.01" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/Refrigerator.ogg" volume="2" range="500" loop="true" />
        </StatusEffect>
      </PowerContainer>
      <ItemContainer capacity="40" slotsperrow="8" canbeselected="true" hideitems="true" msg="ItemMsgInteractSelect">
        <SlotIcon texture="%ModDir:2954998725%/Content/UI/HE-IconsAtlas.png" sourcerect="152,0,85,85" origin="0.5,0.5" />
        <GuiFrame relativesize="0.35,0.45" anchor="Center" style="ItemUI" />
        <Containable items="fooditem,drinkitem,meat,plantitem,canspoil,canexpire,emptybottle,emptyjar,peanutegg,psilotoadegg,orangeboyegg,balloonegg,mudraptoregg,crawleregg,petraptoregg,tigerthresheregg" />
      </ItemContainer>
      <Body width="273" height="380" density="30" />
      <Holdable canbepicked="true" selectkey="Select" pickkey="Action" slots="RightHand+LeftHand" holdpos="85,-35" handle1="-100,30" handle2="10,-20" holdangle="0" msg="ItemMsgDetachWrench" PickingTime="5.0" aimpos="85,-10" attachable="true" aimable="true" AttachesToFloor="true" DisallowAttachingOverTags="refrigerator">
        <RequiredItem items="wrench" type="Equipped" />
        <StatusEffect target="This" type="OnContained">
          <Conditional attached="false" targetitemcomponentname="Holdable" />
          <DropContainedItems />
        </StatusEffect>
        <StatusEffect type="OnActive" target="Character" SpeedMultiplier="0.3" PropulsionSpeedMultiplier="0.3" setvalue="true" duration="0.1" />
      </Holdable>
      <ConnectionPanel selectkey="Action" canbeselected="true" hudpriority="10" msg="ItemMsgRewireScrewdriver">
        <GuiFrame relativesize="0.2,0.32" minsize="400,350" maxsize="480,420" anchor="Center" style="ConnectionPanel" />
        <RequiredSkill identifier="electrical" level="55" />
        <StatusEffect type="OnFailure" target="Character" targetlimbs="LeftHand,RightHand">
          <Sound file="Content/Sounds/Damage/Electrocution1.ogg" range="1000" />
          <Explosion range="100.0" stun="0" force="5.0" flames="false" shockwave="false" sparks="true" underwaterbubble="false" />
          <Affliction identifier="stun" strength="4" />
          <Affliction identifier="burn" strength="5" />
        </StatusEffect>
        <StatusEffect type="OnPicked" target="this">
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Electricity/junctionbox_interact.ogg" volume="1" range="300" />
        </StatusEffect>
        <RequiredItem items="screwdriver" type="Equipped" />
        <input name="power_in" displayname="connection.powerin" />
      </ConnectionPanel>
    </Item>
    <!-- Refrigerator but without the built-in battery for sub-editor only | Useful when wanting to make custom refrigerator designs using different item and parts in sub-editor as the original refrigerator causes the battery status to be always displayed over the custom build. -->
    <Item name="" nameidentifier="he-refrigerator" identifier="he-refrigeratornobattery" tags="kitchen,locker,container,refrigerator" category="Misc" subcategory="Container" descriptionidentifier="he-refrigeratornobattery" description="Sub-Editor exclusive variant of the refrigerator without the built-in battery. Useful when wanting to make custom refrigerator designs using different items and parts in sub-editor as the original refrigerator would always display the battery status on top of the custom build. Prevents spoilage. Can only store food and drinks. Needs power." linkable="true" pickdistance="150" waterproof="true" fireproof="true" isshootable="true" scale="0.5">
      <Sprite texture="%ModDir:2954998725%/Content/Items/Containers/NoBatteryRefrigerator.png" depth="0.799" sourcerect="0,0,273,380" origin="0.5,0.49" />
      <!-- Closed Doors Sprite -->
      <DecorativeSprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" sourcerect="1262,342,273,273" depth="0.797" origin="0.5,0.5">
        <Conditional HasStatusTag="neq opened" />
      </DecorativeSprite>
      <!-- Open Doors Sprite -->
      <DecorativeSprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" sourcerect="1024,0,449,341" depth="0.795" origin="0.5,0.5">
        <Conditional HasStatusTag="opened" />
      </DecorativeSprite>
      <!-- Decorative Contents Sprite -->
      <DecorativeSprite texture="%ModDir:2954998725%/Content/Items/Containers/Containers.png" sourcerect="1254,618,268,300" depth="0.798" origin="0.5,0.5">
        <Conditional HasTag="smallitem" targetcontaineditem="true" />
      </DecorativeSprite>
      <!-- ItemComponent used as a workaround to play a sound if someone stopped interacting with the container since that can't really be done otherwise other than with "Always" StatusEffects which drain performance nonstop instead of only when interaction is happening. -->
      <ItemComponent canbeselected="false" canbepicked="false" allowingameediting="false" IsActive="false">
        <!-- play a closing sound and disable the ItemComponent, stopping to execute the check for the "opened" tag which gets applied while someone is interacting with the container -->
        <StatusEffect type="OnActive" target="This" targetitemcomponent="ItemComponent" IsActive="false" setvalue="true" forceplaysounds="true">
          <Conditional HasStatusTag="neq opened" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/locker_close2.ogg" volume="2" range="250" frequencymultiplier="1.5" selectionmode="Random" />
        </StatusEffect>
      </ItemComponent>
      <!-- Controller to check if someone is interacting with the container -->
      <Controller canbeselected="true" selectkey="Select" hidehud="false" drawuserbehind="false" noninteractablewhenflippedy="false" allowingameediting="false" drawhudwhenequipped="false" comparison="And">
        <!-- play an opening sound when starting to interact with the container -->
        <StatusEffect type="OnActive" target="this" forceplaysounds="true">
          <Conditional HasStatusTag="neq opened" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/refrigerator_interact.ogg" volume="2" range="400" selectionmode="random" />
        </StatusEffect>
        <!-- tag the container with "opened" if the controller is active, meaning someone is interacting with it -->
        <StatusEffect type="OnActive" target="This" tags="opened" duration="0.1" />
        <!-- turn the ItemComponent on so we can play a sound when the user stops interacting with the container. Would otherwise require an "Always" check which would always run and thus impact performance. -->
        <StatusEffect type="OnActive" target="This" targetitemcomponent="ItemComponent" IsActive="true" setvalue="true" />
        <!-- prevent allowing to configure an output for the controller to hide the controller UI. This StatusEffect only executes once per round -->
        <StatusEffect type="OnActive" target="This" targetitemcomponent="Controller" allowingameediting="false" setvalue="true" oneshot="true" />
      </Controller>
      <Deconstruct time="10">
        <Item identifier="steel" amount="4" />
        <Item identifier="titaniumaluminiumalloy" amount="4" />
      </Deconstruct>
      <Powered powerconsumption="200" currpowerconsumption="200" isactive="true">
        <GuiFrame relativesize="0.18,0.15" minsize="350,160" maxsize="420,192" anchor="Center" relativeoffset="0,-0.1" style="ItemUI" msg="ItemMsgInteractSelect" />
        <!-- Tag the container with "activecooling" when powered to allow or prevent StatusEffects checking for "activecooling" on contained items -->
        <StatusEffect type="OnActive" target="This" disabledeltatime="false" tags="activecooling" duration="0.1">
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/Refrigerator.ogg" volume="2" range="500" loop="true" />
        </StatusEffect>
      </Powered>
      <ItemContainer capacity="40" slotsperrow="8" canbeselected="true" hideitems="true" msg="ItemMsgInteractSelect">
        <SlotIcon texture="%ModDir:2954998725%/Content/UI/HE-IconsAtlas.png" sourcerect="152,0,85,85" origin="0.5,0.5" />
        <GuiFrame relativesize="0.35,0.45" anchor="Center" style="ItemUI" />
        <Containable items="fooditem,drinkitem,meat,plantitem,canspoil,canexpire,emptybottle,emptyjar,peanutegg,psilotoadegg,orangeboyegg,balloonegg,mudraptoregg,crawleregg,petraptoregg,tigerthresheregg" />
        <StatusEffect type="OnPicked" target="this">
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Containers/refrigerator_interact.ogg" volume="2" range="400" selectionmode="random" />
        </StatusEffect>
      </ItemContainer>
      <Body width="273" height="380" density="30" />
      <Holdable canbepicked="true" selectkey="Select" pickkey="Action" slots="RightHand+LeftHand" holdpos="85,-35" handle1="-100,30" handle2="10,-20" holdangle="0" msg="ItemMsgDetachWrench" PickingTime="5.0" aimpos="85,-10" attachable="true" aimable="true" AttachesToFloor="true" DisallowAttachingOverTags="refrigerator">
        <RequiredItem items="wrench" type="Equipped" />
        <StatusEffect target="This" type="OnContained">
          <Conditional attached="false" targetitemcomponentname="Holdable" />
          <DropContainedItems />
        </StatusEffect>
        <StatusEffect type="OnActive" target="Character" SpeedMultiplier="0.3" PropulsionSpeedMultiplier="0.3" setvalue="true" duration="0.1" />
      </Holdable>
      <ConnectionPanel selectkey="Action" canbeselected="true" hudpriority="10" msg="ItemMsgRewireScrewdriver">
        <GuiFrame relativesize="0.2,0.32" minsize="400,350" maxsize="480,420" anchor="Center" style="ConnectionPanel" />
        <RequiredSkill identifier="electrical" level="55" />
        <StatusEffect type="OnFailure" target="Character" targetlimbs="LeftHand,RightHand">
          <Sound file="Content/Sounds/Damage/Electrocution1.ogg" range="1000" />
          <Explosion range="100.0" stun="0" force="5.0" flames="false" shockwave="false" sparks="true" underwaterbubble="false" />
          <Affliction identifier="stun" strength="4" />
          <Affliction identifier="burn" strength="5" />
        </StatusEffect>
        <StatusEffect type="OnPicked" target="this">
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Electricity/junctionbox_interact.ogg" volume="1" range="300" />
        </StatusEffect>
        <RequiredItem items="screwdriver" type="Equipped" />
        <input name="power_in" displayname="connection.powerin" />
      </ConnectionPanel>
    </Item>
    <Item name="Kettle" identifier="he-teakettle" Tags="smallitem,kettle" category="Misc" subcategory="Container" maxstacksize="1" cargocontaineridentifier="metalcrate" description="Let's you brew tea or coffee by inserting a mix and putting it on an active stove until it whistles. Once the brewing is done, insert an empty cup to fill." showcontentsintooltip="true" useinhealthinterface="false" scale="0.5" impactsoundtag="impact_metal_heavy" isshootable="True" requireaimtouse="True">
      <PreferredContainer secondary="wreckmedcab,abandonedmedcab" spawnprobability="0.02" />
      <PreferredContainer secondary="abandonedcrewcab" minamount="0" maxamount="1" spawnprobability="0.02" />
      <PreferredContainer secondary="crewcab" amount="1" spawnprobability="0.0" notcampaign="True" />
      <PreferredContainer primary="kitchen" secondary="crewcab" />
      <Sprite texture="%ModDir:2954998725%/Content/Items/Food/DrinksAndIngredients.png" sourcerect="0,426,81,85" depth="0.6" origin="0.5,0.5" />
      <Fabricate suitablefabricators="fabricator" requiredtime="20" requiresrecipe="false" amount="1" outcondition="0.0">
        <RequiredSkill identifier="mechanical" level="20" />
        <RequiredItem identifier="aluminium" amount="1" />
        <RequiredItem identifier="plastic" amount="1" />
      </Fabricate>
      <Deconstruct time="1" />
      <Body width="81" height="85" density="12" />
      <!--Light component used to determine if tea was brewed or not-->
      <LightComponent range="0" lightcolor="47,146,209,255" flicker="0.0" powerconsumption="0" IsOn="false" castshadows="false">
        <!-- TODO: reenable particles if devs fix https://github.com/FakeFishGames/Barotrauma/discussions/16184 -->
        <!-- <StatusEffect type="OnActive" target="This" offset="20,7">
          <ParticleEmitter particle="weldsmoke" particlespersecond="3" scalemin="0.15" scalemax="0.25" anglemin="0" anglemax="360" velocitymin="0" velocitymax="10" lifetimemultiplier="0.5" colormultiplier="255,255,255,150"/>
        </StatusEffect> -->
        <!-- cool down after 100 seconds -->
        <StatusEffect type="OnActive" target="This" delay="100" duration="100" condition="-1" stackable="false" checkconditionalalways="true">
          <Conditional IsActive="False" targetcontainer="true" targetitemcomponent="Fabricator" />
        </StatusEffect>
      </LightComponent>
      <Holdable canbepicked="true" canBeCombined="false" removeOnCombined="false" slots="RightHand,LeftHand" aimpos="0,0" aimangle="0" holdangle="0" handle1="-26,30" holdpos="36,-40" aimable="false" msg="ItemMsgPickUpSelect">
        <!--Increase condition within a stove to simulate brewing, if tea is contained-->
        <StatusEffect type="OnContained" target="This" condition="1.5" comparison="And">
          <Conditional condition="lt 100" />
          <Conditional HasTag="stove" targetcontainer="true" />
          <Conditional IsActive="true" targetcontainer="true" targetitemcomponent="Fabricator" />
          <Conditional Voltage="gt 0.5" targetcontainer="true" />
          <RequiredItem tag="mix" type="contained" />
        </StatusEffect>
        <StatusEffect type="OnContained" target="This" duration="1" stackable="false" comparison="And" disabledeltatime="true">
          <Conditional IsOn="true" targetitemcomponent="LightComponent" />
          <Conditional Condition="gte 100" />
          <Conditional HasTag="stove" targetcontainer="true" />
          <Conditional IsActive="true" targetcontainer="true" targetitemcomponent="Fabricator" />
          <Conditional Voltage="gt 0.5" targetcontainer="true" />
          <RequiredItem tag="mix" type="contained" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Drinks/KettleWhistle.ogg" range="500.0" loop="true" volume="1.0" />
        </StatusEffect>
        <!--Set Light component to active if tea was brewed in the stove to allow refilling of cups-->
        <StatusEffect type="Always" target="this" targetitemcomponent="LightComponent" IsOn="true" setvalue="true">
          <Conditional condition="eq 100" />
        </StatusEffect>
        <!--Set Light component to inactive if tea kettle was emptied to block refilling of cups-->
        <StatusEffect type="OnBroken" target="this" targetitemcomponent="LightComponent" IsOn="false" setvalue="true" />
      </Holdable>
      <!--Container-->
      <ItemContainer capacity="1" maxstacksize="1" hideitems="true" drawinventory="true" canbeselected="false" ShowConditionInContainedStateIndicator="false" ShowContainedStateIndicator="false" removecontaineditemsondeconstruct="true" msg="ItemMsgInteractSelect">
        <SlotIcon slotindex="0" texture="%ModDir:2954998725%/Content/Items/Food/DrinksAndIngredients.png" sourcerect="0,367,45,57" origin="0.5,0.5" />
        <SlotIcon slotindex="1" texture="%ModDir:2954998725%/Content/Items/Food/DrinksAndIngredients.png" sourcerect="83,490,31,21" origin="0.5,0.5" />
        <Containable items="mix"></Containable>
        <Subcontainer capacity="1" maxstacksize="1" slot="1">
          <Containable items="emptycup,emptymug" />
        </Subcontainer>
        <StatusEffect type="Always" target="This" targetitemcomponent="LightComponent" IsOn="false" condition="0" setvalue="true">
          <Conditioal condition="gt 0" />
          <RequiredItem items="mix" type="Contained" RequireEmpty="true" targetslot="0" />
        </StatusEffect>
      </ItemContainer>
      <CustomInterface canbeselected="false" drawhudwhenequipped="true">
        <GuiFrame style="ItemUI" absoluteoffset="0,0" anchor="BottomCenter" relativesize="0.12,0.08" />
        <Button text="interaction.refillcup">
          <!--Remove empty cup from tea kettle-->
          <StatusEffect type="OnUse" target="Contained" targetcontainer="this" targettag="emptycup" targetslot="1" disabledeltatime="true" AllowWhenBroken="true">
            <Conditional IsOn="true" targetitemcomponent="LightComponent" targetcontainer="true" />
            <RequiredItem items="cupmix" targetslot="0" type="Contained" />
            <RequiredItem items="emptycup" targetslot="1" type="Contained" />
            <Remove />
          </StatusEffect>
          <StatusEffect type="OnUse" target="Contained" targetcontainer="this" targettag="emptymug" targetslot="1" disabledeltatime="true" AllowWhenBroken="true">
            <Conditional IsOn="true" targetitemcomponent="LightComponent" targetcontainer="true" />
            <RequiredItem items="mugmix" targetslot="0" type="Contained" />
            <RequiredItem items="emptymug" targetslot="1" type="Contained" />
            <Remove />
          </StatusEffect>
          <!--Refill with bubbleberry tea-->
          <StatusEffect type="OnUse" target="This,Contained" targetslot="0" condition="-12.5" disabledeltatime="true" AllowWhenBroken="true">
            <Conditional IsOn="true" targetitemcomponent="LightComponent" />
            <RequiredItem identifier="he-teamixbubbleberry" targetslot="0" type="Contained" />
            <RequiredItem items="emptycup" targetslot="1" type="Contained" />
            <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Drinks/PourTea.ogg" type="OnUse" range="250.0" loop="false" volume="1.0" />
            <SpawnItem identifier="he-cupbubbleberrytea" spawnposition="SameInventory" spawnifcantbecontained="true" SpawnIfInventoryFull="true" />
          </StatusEffect>
          <!--Refill with popnut tea-->
          <StatusEffect type="OnUse" target="This,Contained" targetslot="0" condition="-12.5" disabledeltatime="true" AllowWhenBroken="true">
            <Conditional IsOn="true" targetitemcomponent="LightComponent" />
            <RequiredItem identifier="he-teamixpopnut" targetslot="0" type="Contained" />
            <RequiredItem items="emptycup" targetslot="1" type="Contained" />
            <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Drinks/PourTea.ogg" type="OnUse" range="250.0" loop="false" volume="1.0" />
            <SpawnItem identifier="he-cuppopnuttea" spawnposition="SameInventory" spawnifcantbecontained="true" SpawnIfInventoryFull="true" />
          </StatusEffect>
          <!--Refill with coffee (cup)-->
          <StatusEffect type="OnUse" target="This,Contained" targetslot="0" condition="-12.5" disabledeltatime="true" AllowWhenBroken="true">
            <Conditional IsOn="true" targetitemcomponent="LightComponent" />
            <RequiredItem identifier="he-coffeemix" targetslot="0" type="Contained" />
            <RequiredItem items="emptycup" targetslot="1" type="Contained" />
            <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Drinks/PourTea.ogg" type="OnUse" range="250.0" loop="false" volume="1.0" />
            <SpawnItem identifier="he-cupcoffee" spawnposition="SameInventory" spawnifcantbecontained="true" SpawnIfInventoryFull="true" />
          </StatusEffect>
          <!--Refill with chocolate (cup)-->
          <StatusEffect type="OnUse" target="This,Contained" targetslot="0" condition="-12.5" disabledeltatime="true" AllowWhenBroken="true">
            <Conditional IsOn="true" targetitemcomponent="LightComponent" />
            <RequiredItem identifier="he-chocolatemix" targetslot="0" type="Contained" />
            <RequiredItem items="emptycup" targetslot="1" type="Contained" />
            <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Drinks/PourTea.ogg" type="OnUse" range="250.0" loop="false" volume="1.0" />
            <SpawnItem identifier="he-cuphotchocolate" spawnposition="SameInventory" spawnifcantbecontained="true" SpawnIfInventoryFull="true" />
          </StatusEffect>
          <!--Refill with coffee (mug)-->
          <StatusEffect type="OnUse" target="This,Contained" targetslot="0" condition="-20" disabledeltatime="true" AllowWhenBroken="true">
            <Conditional IsOn="true" targetitemcomponent="LightComponent" />
            <RequiredItem identifier="he-coffeemix" targetslot="0" type="Contained" />
            <RequiredItem items="emptymug" targetslot="1" type="Contained" />
            <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Drinks/PourTea.ogg" type="OnUse" range="250.0" loop="false" volume="1.0" />
            <SpawnItem identifier="he-mugcoffee" spawnposition="SameInventory" spawnifcantbecontained="true" SpawnIfInventoryFull="true" />
          </StatusEffect>
          <!--Refill with chocolate (mug)-->
          <StatusEffect type="OnUse" target="This,Contained" targetslot="0" condition="-20" disabledeltatime="true" AllowWhenBroken="true">
            <Conditional IsOn="true" targetitemcomponent="LightComponent" />
            <RequiredItem identifier="he-chocolatemix" targetslot="0" type="Contained" />
            <RequiredItem items="emptymug" targetslot="1" type="Contained" />
            <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Drinks/PourTea.ogg" type="OnUse" range="250.0" loop="false" volume="1.0" />
            <SpawnItem identifier="he-mughotchocolate" spawnposition="SameInventory" spawnifcantbecontained="true" SpawnIfInventoryFull="true" />
          </StatusEffect>
        </Button>
      </CustomInterface>
    </Item>
    <!-- NEW KETTLE TEST, DISABLED AND HIDDEN FOR NOW -->
    <Item name="Test Kettle" identifier="he-teakettleTEST" Tags="smallitem,kettle" category="Misc" subcategory="Container" maxstacksize="1" cargocontaineridentifier="metalcrate" description="PROTOTYPE FOR POURING TEA. IF YOU SEE THIS ITEM, REPORT IT" showcontentsintooltip="true" useinhealthinterface="false" scale="0.5" impactsoundtag="impact_metal_heavy" isshootable="True" requireaimtouse="True" hideinmenus="true">
      <Sprite texture="%ModDir:2954998725%/Content/Items/Food/DrinksAndIngredients.png" sourcerect="0,426,81,85" depth="0.6" origin="0.5,0.5" />
      <Body width="81" height="85" density="12" />
      <!-- <PreferredContainer secondary="wreckmedcab,abandonedmedcab" spawnprobability="0.02" />
      <PreferredContainer secondary="abandonedcrewcab" minamount="0" maxamount="1" spawnprobability="0.02" />
      <PreferredContainer secondary="crewcab" amount="1" spawnprobability="0.0" notcampaign="True"/>
      <PreferredContainer primary="kitchen" secondary="crewcab"/>
      <Fabricate suitablefabricators="fabricator" requiredtime="20" requiresrecipe="false" amount="1" outcondition="0.0">
        <RequiredSkill identifier="mechanical" level="20" />
        <RequiredItem identifier="aluminium" amount="1"/>
        <RequiredItem identifier="plastic" amount="1"/>
      </Fabricate> -->
      <Deconstruct time="1" />
      <!--Light component used to determine if tea was brewed or not-->
      <LightComponent range="0" lightcolor="47,146,209,255" flicker="0.0" powerconsumption="0" IsOn="false" castshadows="false">
        <!-- TODO: reenable particles if devs fix https://github.com/FakeFishGames/Barotrauma/discussions/16184 -->
        <!-- <StatusEffect type="OnActive" target="This" offset="20,7">
          <ParticleEmitter particle="weldsmoke" particlespersecond="3" scalemin="0.15" scalemax="0.25" anglemin="0" anglemax="360" velocitymin="0" velocitymax="10" lifetimemultiplier="0.5" colormultiplier="255,255,255,150"/>
        </StatusEffect> -->
        <!-- cool down after 100 seconds -->
        <StatusEffect type="OnActive" target="This" delay="100" duration="100" condition="-1" stackable="false" checkconditionalalways="true">
          <Conditional IsActive="False" targetcontainer="true" targetitemcomponent="Fabricator" />
        </StatusEffect>
      </LightComponent>
      <Holdable canbepicked="true" canBeCombined="false" removeOnCombined="false" slots="RightHand,LeftHand" aimpos="26,10" aimangle="-40" holdangle="0" handle1="-26,30" holdpos="36,-40" aimable="false" msg="ItemMsgPickUpSelect">
        <!-- reset condition to 0 and turn of the light component when held and no tea mix is contained so you have to brew the next tea mix -->
        <StatusEffect type="OnActive" target="This" targetitemcomponent="LightComponent" IsOn="false" condition="0" setvalue="true">
          <Conditional condition="gt 0" />
          <RequiredItem items="mix" type="Contained" RequireEmpty="true" targetslot="0" />
        </StatusEffect>
        <!-- increase condition within a stove to simulate brewing, if a tea mix is contained-->
        <StatusEffect type="OnContained" target="This" condition="1.5" comparison="And">
          <Conditional condition="lt 100" />
          <Conditional HasTag="stove" targetcontainer="true" />
          <Conditional IsActive="true" targetcontainer="true" targetitemcomponent="Fabricator" />
          <Conditional Voltage="gt 0.5" targetcontainer="true" />
          <RequiredItem tag="mix" type="contained" />
        </StatusEffect>
        <!-- play a whistle sound if the tea is considered fully brewed -->
        <StatusEffect type="OnContained" target="This" duration="1" stackable="false" comparison="And" disabledeltatime="true">
          <Conditional IsOn="true" targetitemcomponent="LightComponent" />
          <Conditional Condition="gte 100" />
          <Conditional HasTag="stove" targetcontainer="true" />
          <Conditional IsActive="true" targetcontainer="true" targetitemcomponent="Fabricator" />
          <Conditional Voltage="gt 0.5" targetcontainer="true" />
          <RequiredItem tag="mix" type="contained" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Drinks/KettleWhistle.ogg" range="500.0" loop="true" volume="1.0" />
        </StatusEffect>
        <!--Set Light component to active if tea was brewed in the stove to allow refilling of cups-->
        <StatusEffect type="Always" target="this" targetitemcomponent="LightComponent" IsOn="true" setvalue="true">
          <Conditional condition="eq 100" />
        </StatusEffect>
        <!--Set Light component to inactive if tea kettle was emptied to block refilling of cups-->
        <StatusEffect type="OnBroken" target="this" targetitemcomponent="LightComponent" IsOn="false" setvalue="true" />
      </Holdable>
      <!-- TODO: Make it so particles and water drops only occur when actively filling a cup | currently they always play, even when condition of teamix isn't reducing -->
      <RangedWeapon reload="0" barrelpos="43,4" targetstructures="false" hititems="false">
        <!-- require a tea mix to be contained for the RepairTool component to work -->
        <RequiredItem items="teamix" type="Contained" />
        <ParticleEmitter particle="waterdropshort" velocitymin="0.0" velocitymax="5.0" particlespersecond="1" />
        <!-- apply status tag "pouring" to the kettle when using it -->
        <StatusEffect type="OnUse" target="This" StatusEffectTags="pouring" duration="0.1">
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Drinks/DrainLiquid.ogg" volume="3" range="300" frequencymultiplier="3" loop="true" />
        </StatusEffect>
        <!-- apply status tag "pouringbubbleberrytea" to nearby tea cups when using the kettle and bubbleberry tea mix is contained -->
        <StatusEffect type="OnUse" target="NearbyItems" targets="teacup" range="50" StatusEffectTags="pouringbubbleberrytea" duration="0.1">
          <RequiredItem identifier="he-teamixbubbleberry" type="Contained" />
        </StatusEffect>
        <!-- also apply the status tag "pouringbubbleberrytea" to the character using the kettle -->
        <StatusEffect type="OnUse" target="Character" StatusEffectTags="pouringbubbleberrytea" duration="0.1">
          <RequiredItem identifier="he-teamixbubbleberry" type="Contained" />
        </StatusEffect>
        <!-- apply status tag "pouringpopnuttea" to nearby tea cups when using the kettle and bubbleberry tea mix is contained -->
        <StatusEffect type="OnUse" target="NearbyItems" targets="teacup" range="50" StatusEffectTags="pouringpopnuttea" duration="0.1">
          <RequiredItem identifier="he-teamixpopnut" type="Contained" />
        </StatusEffect>
        <!-- also apply the status tag "pouringbubbleberrytea" to the character using the kettle -->
        <StatusEffect type="OnUse" target="Character" StatusEffectTags="pouringpopnuttea" duration="0.1">
          <RequiredItem identifier="he-teamixpopnut" type="Contained" />
        </StatusEffect>
      </RangedWeapon>
      <!--Container-->
      <ItemContainer capacity="1" maxstacksize="1" hideitems="true" drawinventory="true" canbeselected="false" ShowConditionInContainedStateIndicator="false" ShowContainedStateIndicator="false" removecontaineditemsondeconstruct="true" msg="ItemMsgInteractSelect">
        <SlotIcon slotindex="0" texture="%ModDir:2954998725%/Content/Items/Food/DrinksAndIngredients.png" sourcerect="0,367,45,57" origin="0.5,0.5" />
        <Containable items="he-teamixbubbleberry">
          <!-- tag the inserted tea and set it to be non-interactable to prevent taking it back out -->
          <StatusEffect type="OnInserted" target="Contained" SetTags="activebubbleberryteamix" noninteractable="true" setvalue="true">
            <RequiredItem identifier="he-teamixbubbleberry" type="Contained" />
          </StatusEffect>
          <StatusEffect type="OnInserted" target="Contained" SetTags="activepopnutteamix" noninteractable="true" setvalue="true">
            <RequiredItem identifier="he-teamixpopnut" type="Contained" />
          </StatusEffect>
        </Containable>
      </ItemContainer>
    </Item>
    <!-- //// SWAPPABLES  //// -->
    <!-- //// SWAPPABLES  //// -->
    <!-- //// SWAPPABLES  //// -->
    <!-- OVERRIDE to Make ULD swappable -->
    <Item name="" identifier="unitloaddevice" tags="cargocontainer,utilitypoint" linkable="true" pickdistance="150" scale="0.5" waterproof="true" allowedupgrades="utilitypoint">
      <Sprite texture="Content/Items/Containers/UnitLoadDevice.png" depth="0.8" sourcerect="0,0,567,446" origin="0.5,0.5" />
      <DecorativeSprite texture="Content/Items/Containers/UnitLoadDevice.png" depth="0.85" sourcerect="0,457,567,446" origin="0.5,0.5" />
      <UpgradePreviewSprite scale="2" texture="Content/UI/InventoryUIAtlas.png" sourcerect="447,280,44,44" origin="0.5,0.5" />
      <ItemContainer capacity="12" maxstacksize="1" canbeselected="true" hideitems="false" itempos="120,-364" iteminterval="150,80" itemsperrow="3" slotsperrow="4" msg="ItemMsgInteractSelect" containedspritedepths="0.81,0.82,0.81,0.82,0.81,0.82,0.81,0.82,0.81,0.82,0.81,0.82">
        <GuiFrame relativesize="0.25,0.3" anchor="Center" style="ItemUI" />
        <Containable items="crate" />
      </ItemContainer>
      <SwappableItem price="3000" replacementonuninstall="emptylargedevice" origin="200,150" swapidentifier="largedevice">
        <SchematicSprite texture="Content/Items/Containers/UnitLoadDevice.png" sourcerect="0,0,567,446" />
      </SwappableItem>
    </Item>
    <!-- Swappable Junction Box to power your items -->
    <Item name="" identifier="junctionboxswappable" nameidentifier="junctionbox" descriptionidentifier="junctionbox" tags="junctionbox,utilitypoint" category="Electrical,Machine" variantof="junctionbox" hideinmenus="true">
      <DecorativeSprite texture="Content/Map/FinsA.png" sourcerect="1120,0,192,192" depth="0.85" origin="0.5,0.5" />
      <SwappableItem price="1600" replacementonuninstall="emptylargedevice" origin="0,0" swapidentifier="largedevice">
        <SchematicSprite texture="Content/Items/Electricity/signalcomp.png" sourcerect="264,1,110,176" scale="0.25" />
      </SwappableItem>
    </Item>
    <!-- Empty hardpoint for ULD/JB -->
    <Item name="" identifier="emptylargedevice" nameidentifier="loosepanel" descriptionidentifier="loosepanel" tags="hidden,utilitypoint" scale="0.7" allowedupgrades="utilitypoint">
      <sprite texture="Content/Items/Containers/containers.png" sourcerect="1,545,112,110" depth="0.8" origin="0.5,0.5" canflipx="false" />
      <DecorativeSprite texture="Content/Map/FinsA.png" sourcerect="1120,0,192,192" depth="0.85" origin="0.5,0.5" />
      <UpgradePreviewSprite scale="2" texture="Content/UI/InventoryUIAtlas.png" sourcerect="447,280,44,44" origin="0.5,0.5" />
      <trigger x="25" y="-25" width="60" height="60" />
      <ItemContainer capacity="3" slotsperrow="3" canbeselected="true" hideitems="true" msg="ItemMsgInteractSelect">
        <GuiFrame relativesize="0.27,0.2" anchor="Center" style="ItemUI" />
        <Containable items="smallitem,mediumitem" />
      </ItemContainer>
      <SwappableItem canbebought="false" origin="0,0" swapidentifier="largedevice">
        <SchematicSprite texture="Content/Items/Containers/containers.png" sourcerect="1,545,112,110" scale="0.25" />
      </SwappableItem>
    </Item>
  </Items>
</Override>