<?xml version="1.0" encoding="utf-8"?>
<Override>
  <Items>
    <!--spineling-->
    <Item name="Spineling Meat Chunk" identifier="he-spinelingmeatchunk" category="Misc" subcategory="Ingredients" maxstacksize="8" cargocontaineridentifier="he-coolercrate" description="" Tags="smallitem,meat,meatchunk,ingredient,canspoil,petfood1,petfood2,petfood3" useinhealthinterface="false" scale="0.5" impactsoundtag="impact_soft" isshootable="true" requireaimtouse="true">
      <PreferredContainer secondary="wreckmedcab,abandonedmedcab" spawnprobability="0.02" />
      <PreferredContainer secondary="abandonedcrewcab" minamount="0" maxamount="1" spawnprobability="0.02" />
      <PreferredContainer primary="refrigerator" secondary="refrigeratedcontainer" />
      <Sprite texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="343,27,169,38" depth="0.6" origin="0.5,0.5" />
      <Body width="150" radius="19" density="12" />
      <Price baseprice="159" minavailable="4" maxavailable="16" mincondition="0.9" maxcondition="1.0" usecondition="false" sold="false">
        <Price storeidentifier="merchantoutpost" />
        <Price storeidentifier="merchantcity" />
        <Price storeidentifier="merchantresearch" />
        <Price storeidentifier="merchantmilitary" />
        <Price storeidentifier="merchantmine" />
        <Price storeidentifier="merchantmedical" />
        <Price storeidentifier="merchantbutcher" multiplier="2.0" minavailable="0" maxavailable="16" sold="true" />
      </Price>
      <Deconstruct time="10" requireddeconstructor="deconstructor">
        <!-- <Item identifier="alienblood" amount="0" /> -->
      </Deconstruct>
      <!-- The meat gains 2 timeframe every 2 seconds. It loses condition when the timeframe reaches 50, and then goes back to 40, effectively losing condition every 10 seconds. When refrigerated, it resets the timeframe to 40. -->
      <GreaterComponent canbepicked="false" canbeselected="false" allowingameediting="false" drawhudwhenequipped="false" timeframe="0">
        <StatusEffect type="Always" target="This" timeframe="2" interval="2" disabledeltatime="true" />
        <StatusEffect type="Always" target="This" timeframe="40" interval="2" disabledeltatime="true" setvalue="true">
          <Conditional HasStatusTag="eq activecooling" targetcontainer="true" />
          <Conditional HasTag="eq kitchenfabricator" targetcontainer="true" />
        </StatusEffect>
        <StatusEffect type="Always" target="This" Condition="-2.0" timeframe="-10" disabledeltatime="true" interval="0.9">
          <Conditional timeframe="gte 50" />
        </StatusEffect>
      </GreaterComponent>
      <Holdable DisableWhenRangedWeaponEquipped="true" canbepicked="true" canBeCombined="false" removeOnCombined="true" slots="Any,RightHand+LeftHand" aimpos="26,20" holdangle="270" holdpos="32,28" aimangle="120" aimable="false" swingwhenusing="true" msg="ItemMsgPickUpSelect">
        <StatusEffect type="OnUse" target="This" Condition="-4.0" />
        <StatusEffect type="OnUse" target="Character">
          <ReduceAffliction type="hunger" amount="3" />
          <Affliction identifier="deliriuminepoisoning" probability="0.001" amount="8" />
          <Affliction identifier="nausea" amount="4" />
          <Affliction identifier="worminfection" amount="1" probability="0.01" />
          <Affliction identifier="tapeworminfection" amount="1" probability="0.01" />
          <Affliction identifier="spill" amount="1000" probability="0.0005" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Food/EatingSoft.ogg" loop="True" range="200" volume="5.0" />
        </StatusEffect>
        <StatusEffect type="OnBroken" target="This">
          <Remove />
        </StatusEffect>
      </Holdable>
      <AiTarget sightrange="1000" static="True" />
    </Item>
    <Item name="Raw Spineling Slices" identifier="he-rawspinelingslices" aliases="he-rawspinelingkebab" category="Misc" subcategory="Ingredients" maxstacksize="8" cargocontaineridentifier="he-coolercrate" description="" Tags="smallitem,meat,allowongrill,ingredient,canspoil,petfood1,petfood2,petfood3" useinhealthinterface="false" scale="0.5" impactsoundtag="impact_soft" isshootable="true" requireaimtouse="true" spritecolor="255,150,150,255" inventoryiconcolor="255,150,150,255" containercolor="255,150,150,255" health="10">
      <Sprite texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="464,1,47,25" depth="0.6" origin="0.5,0.5" />
      <InventoryIcon texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="464,1,47,25" origin="0.5,0.5" />
      <ContainedSprite allowedcontainertags="table" texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="464,1,47,25" depth="0.525" origin="0.5,0.65" />
      <Body width="35" radius="12" density="12" />
      <Price baseprice="164" minavailable="4" maxavailable="16" mincondition="0.9" maxcondition="1.0" usecondition="false" sold="false">
        <Price storeidentifier="merchantoutpost" />
        <Price storeidentifier="merchantcity" />
        <Price storeidentifier="merchantresearch" />
        <Price storeidentifier="merchantmilitary" />
        <Price storeidentifier="merchantmine" />
        <Price storeidentifier="merchantmedical" />
        <Price storeidentifier="merchantbutcher" multiplier="2.0" minavailable="0" maxavailable="16" sold="true" />
      </Price>
      <Deconstruct time="5" requireddeconstructor="deconstructor" />
      <Fabricate suitablefabricators="cuttingboard" requiredtime="13" requiresrecipe="false" amount="4">
        <RequiredSkill identifier="butchery" level="30" />
        <RequiredItem identifier="he-spinelingmeatchunk" Amount="1" MinCondition="0.5" MaxCondition="1.0" UseCondition="False" />
      </Fabricate>
      <!-- ItemComponent hosts the effects for grilling the item -->
      <ItemComponent canbeselected="false" canbepicked="false" allowingameediting="false">
        <ActiveConditional HasStatusTag="eq activegrill" targetcontainer="true" />
        <!-- MaxValueLength is used to track the time spent on the grill. It is increased by 1 every second the item is in a container with the "activegrill" status tag -->
        <StatusEffect type="OnActive" target="This" MaxValueLength="1" interval="1" disabledeltatime="true" />
        <!-- Reset the MaxValueLength when the item is no longer contained in a container with the "activegrill" status tag -->
        <StatusEffect type="OnActive" target="This" MaxValueLength="0" setvalue="true" disabledeltatime="true">
          <Conditional HasStatusTag="neq activegrill" targetcontainer="true" />
        </StatusEffect>
        <!-- Check every second if the MaxValueLength reached or exceeded a value of 45, then remove the item and spawn the cooked version in its place -->
        <StatusEffect type="OnActive" target="This" interval="1" disabledeltatime="true">
          <Conditional MaxValueLength="gte 45" />
          <Remove />
          <SpawnItem identifier="he-spinelingslices" spawnposition="SameInventory" spawnifcantbecontained="true" SpawnIfInventoryFull="true" />
        </StatusEffect>
      </ItemComponent>
      <!-- MemoryComponent hosts the MaxValueLength attribute which we use to track the time by adjusting its value via StatusEffects each second -->
      <MemoryComponent canbepicked="false" canbeselected="false" allowingameediting="false" drawhudwhenequipped="false" string="" MaxValueLength="0" />
      <!-- The meat gains 2 timeframe every 2 seconds. It loses condition when the timeframe reaches 50, and then goes back to 40, effectively losing condition every 10 seconds. When refrigerated, it resets the timeframe to 40. -->
      <GreaterComponent canbepicked="false" canbeselected="false" allowingameediting="false" drawhudwhenequipped="false" timeframe="0">
        <StatusEffect type="Always" target="This" timeframe="2" interval="2" disabledeltatime="true" />
        <StatusEffect type="Always" target="This" timeframe="40" interval="2" disabledeltatime="true" setvalue="true">
          <Conditional HasStatusTag="eq activecooling" targetcontainer="true" />
          <Conditional HasTag="eq kitchenfabricator" targetcontainer="true" />
        </StatusEffect>
        <StatusEffect type="Always" target="This" Condition="-0.5" timeframe="-10" disabledeltatime="true" interval="0.9">
          <Conditional timeframe="gte 50" />
        </StatusEffect>
      </GreaterComponent>
      <Holdable DisableWhenRangedWeaponEquipped="true" canbepicked="true" canBeCombined="false" removeOnCombined="true" slots="Any,RightHand,LeftHand" aimpos="28,18" holdangle="30" aimangle="0" aimable="false" swingwhenusing="true" msg="ItemMsgPickUpSelect">
        <!-- When using (eating) the item, reduce the condition -->
        <StatusEffect type="OnUse" target="This" Condition="-1.0" />
        <!-- When using (eating) the item -->
        <StatusEffect type="OnUse" target="Character">
          <ReduceAffliction type="hunger" amount="0.5" />
          <Affliction identifier="nausea" amount="6" probability="0.25" />
          <Affliction identifier="deliriuminepoisoning" probability="0.001" amount="8" />
          <Affliction identifier="worminfection" amount="1" probability="0.01" />
          <Affliction identifier="tapeworminfection" amount="1" probability="0.01" />
          <Affliction identifier="spill" amount="1000" probability="0.0005" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Food/EatingSoft.ogg" loop="True" range="200" volume="5.0" />
        </StatusEffect>
        <!-- When the item's condition reaches 0 (item breaks), remove the item -->
        <StatusEffect type="OnBroken" target="This">
          <Remove />
        </StatusEffect>
      </Holdable>
      <AiTarget sightrange="1000" static="True" />
    </Item>
    <!-- Cooked Versions -->
    <Item name="Spineling Slices" identifier="he-spinelingslices" category="Misc" subcategory="Ingredients" maxstacksize="8" cargocontaineridentifier="he-coolercrate" description="" Tags="smallitem,meat,allowongrill,ingredient,canspoil,petfood1,petfood2,petfood3" useinhealthinterface="false" scale="0.5" impactsoundtag="impact_soft" isshootable="true" requireaimtouse="true" spritecolor="255,255,255,255" inventoryiconcolor="255,255,255,255" containercolor="255,255,255,255" health="10">
      <Sprite texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="464,1,47,25" depth="0.6" origin="0.5,0.5" />
      <InventoryIcon texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="464,1,47,25" origin="0.5,0.5" />
      <ContainedSprite allowedcontainertags="table" texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="464,1,47,25" depth="0.525" origin="0.5,0.65" />
      <Body width="35" radius="12" density="12" />
      <Price baseprice="164" minavailable="4" maxavailable="16" mincondition="0.9" maxcondition="1.0" usecondition="false" sold="false">
        <Price storeidentifier="merchantoutpost" />
        <Price storeidentifier="merchantcity" />
        <Price storeidentifier="merchantresearch" />
        <Price storeidentifier="merchantmilitary" />
        <Price storeidentifier="merchantmine" />
        <Price storeidentifier="merchantmedical" />
        <Price storeidentifier="merchantbutcher" multiplier="2.0" minavailable="0" maxavailable="16" sold="true" />
      </Price>
      <Deconstruct time="5" requireddeconstructor="deconstructor" />
      <Fabricate suitablefabricators="stove" requiredtime="30" requiresrecipe="false" amount="1">
        <RequiredSkill identifier="cooking" level="40" />
        <RequiredItem identifier="he-rawspinelingslices" amount="1" MinCondition="0.5" MaxCondition="1.0" UseCondition="False" />
        <RequiredItem identifier="he-cookingoil" UseCondition="True" MinCondition="0.1" />
        <RequiredItem tag="pan" UseCondition="True" MinCondition="0.0" />
      </Fabricate>
      <!-- ItemComponent hosts the effects for grilling the item -->
      <ItemComponent canbeselected="false" canbepicked="false" allowingameediting="false">
        <ActiveConditional HasStatusTag="eq activegrill" targetcontainer="true" />
        <!-- MaxValueLength is used to track the time spent on the grill. It is increased by 1 every second the item is in a container with the "activegrill" status tag -->
        <StatusEffect type="OnActive" target="This" MaxValueLength="1" interval="1" disabledeltatime="true" />
        <!-- Reset the MaxValueLength when the item is no longer contained in a container with the "activegrill" status tag -->
        <StatusEffect type="OnActive" target="This" MaxValueLength="0" setvalue="true" disabledeltatime="true">
          <Conditional HasStatusTag="neq activegrill" targetcontainer="true" />
        </StatusEffect>
        <!-- Check every second if the MaxValueLength reached or exceeded a value of 20, then remove the item and spawn the burned version in its place -->
        <StatusEffect type="OnActive" target="This" interval="1" disabledeltatime="true">
          <Conditional MaxValueLength="gte 20" />
          <Remove />
          <SpawnItem identifier="he-burnedspinelingslices" spawnposition="SameInventory" spawnifcantbecontained="true" SpawnIfInventoryFull="true" />
        </StatusEffect>
      </ItemComponent>
      <!-- MemoryComponent hosts the MaxValueLength attribute which we use to track the time by adjusting its value via StatusEffects each second -->
      <MemoryComponent canbepicked="false" canbeselected="false" allowingameediting="false" drawhudwhenequipped="false" string="" MaxValueLength="0" />
      <Holdable DisableWhenRangedWeaponEquipped="true" canbepicked="true" canBeCombined="false" removeOnCombined="true" slots="Any,RightHand,LeftHand" aimpos="28,18" holdangle="30" aimangle="0" aimable="false" swingwhenusing="true" msg="ItemMsgPickUpSelect">
        <!-- When using (eating) the item, reduce the condition -->
        <StatusEffect type="OnUse" target="This" Condition="-1.0" />
        <!-- When using (eating) the item -->
        <StatusEffect type="OnUse" target="Character">
          <ReduceAffliction type="hunger" amount="0.5" />
          <Affliction identifier="spill" amount="1000" probability="0.0005" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Food/EatingSoft.ogg" loop="True" range="200" volume="5.0" />
        </StatusEffect>
        <!-- When the item's condition reaches 0 (item breaks), remove the item -->
        <StatusEffect type="OnBroken" target="This">
          <Remove />
        </StatusEffect>
      </Holdable>
      <AiTarget sightrange="1000" static="True" />
    </Item>
    <!-- Burned Versions -->
    <Item name="Burned Spineling Slices" identifier="he-burnedspinelingslices" category="Misc" subcategory="Ingredients" maxstacksize="8" cargocontaineridentifier="he-coolercrate" description="" Tags="smallitem,meat,allowongrill,ingredient,canspoil,petfood1,petfood2,petfood3,burnedfood" useinhealthinterface="false" scale="0.5" impactsoundtag="impact_soft" isshootable="true" requireaimtouse="true" spritecolor="41,41,41,255" inventoryiconcolor="41,41,41,255" containercolor="41,41,41,255" health="10">
      <Sprite texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="464,1,47,25" depth="0.6" origin="0.5,0.5" />
      <InventoryIcon texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="464,1,47,25" origin="0.5,0.5" />
      <ContainedSprite allowedcontainertags="table" texture="%ModDir:2954998725%/Content/Items/Food/FoodAndMeat.png" sourcerect="464,1,47,25" depth="0.525" origin="0.5,0.65" />
      <Body width="35" radius="12" density="12" />
      <Price baseprice="164" minavailable="4" maxavailable="16" mincondition="0.9" maxcondition="1.0" usecondition="false" sold="false">
        <Price storeidentifier="merchantoutpost" />
        <Price storeidentifier="merchantcity" />
        <Price storeidentifier="merchantresearch" />
        <Price storeidentifier="merchantmilitary" />
        <Price storeidentifier="merchantmine" />
        <Price storeidentifier="merchantmedical" />
        <Price storeidentifier="merchantbutcher" multiplier="2.0" minavailable="0" maxavailable="16" sold="true" />
      </Price>
      <Deconstruct time="5" requireddeconstructor="deconstructor" />
      <!-- ItemComponent hosts the effects for grilling the item -->
      <ItemComponent canbeselected="false" canbepicked="false" allowingameediting="false">
        <ActiveConditional HasStatusTag="eq activegrill" targetcontainer="true" />
        <!-- MaxValueLength is used to track the time spent on the grill. It is increased by 1 every second the item is in a container with the "activegrill" status tag -->
        <StatusEffect type="OnActive" target="This" MaxValueLength="1" interval="1" disabledeltatime="true" />
        <!-- Reset the MaxValueLength when the item is no longer contained in a container with the "activegrill" status tag -->
        <StatusEffect type="OnActive" target="This" MaxValueLength="0" setvalue="true" disabledeltatime="true">
          <Conditional HasStatusTag="neq activegrill" targetcontainer="true" />
        </StatusEffect>
        <!-- Check every second if the MaxValueLength reached or exceeded a value of 12, then remove the item and spawn a fire in its place -->
        <StatusEffect type="OnActive" target="This" interval="1" disabledeltatime="true">
          <Conditional MaxValueLength="gte 12" />
          <Remove />
          <Fire size="1" />
        </StatusEffect>
      </ItemComponent>
      <!-- MemoryComponent hosts the MaxValueLength attribute which we use to track the time by adjusting its value via StatusEffects each second -->
      <MemoryComponent canbepicked="false" canbeselected="false" allowingameediting="false" drawhudwhenequipped="false" string="" MaxValueLength="0" />
      <Holdable DisableWhenRangedWeaponEquipped="true" canbepicked="true" canBeCombined="false" removeOnCombined="true" slots="Any,RightHand,LeftHand" aimpos="28,18" holdangle="30" aimangle="0" aimable="false" swingwhenusing="true" msg="ItemMsgPickUpSelect">
        <!-- When using (eating) the item, reduce the condition -->
        <StatusEffect type="OnUse" target="This" Condition="-1.0" />
        <!-- When using (eating) the item -->
        <StatusEffect type="OnUse" target="Character">
          <ReduceAffliction type="hunger" amount="0.5" />
          <Affliction identifier="nausea" amount="6" probability="0.25" />
          <Affliction identifier="spill" amount="1000" probability="0.0005" />
          <Sound file="%ModDir:2954998725%/Content/Sounds/Items/Food/EatingSoft.ogg" loop="True" range="200" volume="5.0" />
        </StatusEffect>
        <StatusEffect type="OnUse" target="Character">
          <Conditional thirst="gt 0" />
          <Affliction identifier="thirst" amount="0.5" />
        </StatusEffect>
        <StatusEffect type="OnBroken" target="This">
          <Remove />
        </StatusEffect>
      </Holdable>
      <AiTarget sightrange="1000" static="True" />
    </Item>
  </Items>
</Override>