<?xml version="1.0" encoding="utf-8"?>
<Override>
  <Item name="Hydroponic Planter" identifier="he-hydroponicplanter" tags="hydroponic,hydroponicplanter,donttakeitems,dontsellitems" category="Machine" subcategory="Gardening" linkable="true" allowedlinks="medcabinet,locker,kitchen" description="Устройство, создающее идеальные условия для роста подводных растений Европы. Производит одно растение каждые 10 минут. Требует питания." isshootable="true" scale="0.3" damagedbyexplosions="true" explosiondamagemultiplier="0.2" canflipx="false">
    <Body width="414" height="250" density="20" />
    <sprite texture="Content/Map/Outposts/Art/MedicalItemResearch.png" sourcerect="0,6,414,297" depth="0.799" premultiplyalpha="false" origin="0.5,0.45" />
    <Price baseprice="1399" sold="true">
      <Price storeidentifier="merchantoutpost" multiplier="1.7" minavailable="0" maxavailable="1" />
      <Price storeidentifier="merchantcity" multiplier="1.4" minavailable="0" maxavailable="3" />
      <Price storeidentifier="merchantresearch" multiplier="1.0" minavailable="2" maxavailable="5" />
    </Price>
    <Deconstruct time="15">
        <Item identifier="steel" amount="2" />
        <Item identifier="he-glassfragments" amount="4" />
        <Item identifier="plastic" amount="2" />
      </Deconstruct>
      <Fabricate suitablefabricators="fabricatorm" requiredtime="45" requiresrecipe="false" amount="1">
        <RequiredSkill identifier="mechanical" level="25" />
        <RequiredItem identifier="steel" amount="4" />
        <RequiredItem identifier="titaniumaluminiumalloy" amount="2" />
        <RequiredItem identifier="plastic" amount="4" />
        <RequiredItem identifier="he-glassfragments" amount="20" />
        <RequiredItem identifier="fpgacircuit" amount="4" />
      </Fabricate>
    <CustomInterface canbeselected="true" drawhudwhenequipped="false">
      <GuiFrame style="ItemUI" absoluteoffset="0,-100" anchor="Center" relativesize="0.07,0.08" />
      <TickBox text="interaction.onoff">
        <StatusEffect type="OnUse" target="This" IsOn="true" targetitemcomponent="LightComponent" setvalue="true">
          <Conditional IsOn="false" targetitemcomponent="LightComponent" />
        </StatusEffect>
        <StatusEffect type="OnSecondaryUse" target="This" IsOn="false" targetitemcomponent="LightComponent" setvalue="true">
          <Conditional IsOn="true" targetitemcomponent="LightComponent" />
        </StatusEffect>
      </TickBox>
    </CustomInterface>
    <!--GreaterComponent used to keep track of time to simulate growth-->
    <GreaterComponent TimeFrame="0" allowingameediting="false" canbeselected="false" />
    <LightComponent range="0.0" lightcolor="255,255,255,111" IsOn="false" castshadows="false" alphablend="false" allowingameediting="false" powerconsumption="200">
      <sprite texture="Content/Map/Outposts/Art/MedicalItemResearchLights.png" sourcerect="0,6,414,297" depth="0.1" origin="0.5,0.5" alpha="1.0" />
      <!--Tag the item to allow for StatusEffect conditionals to check if every requirement is met and play a sound loop to clarify the item is active-->
      <StatusEffect type="OnActive" target="This" disabledeltatime="false" comparison="And" tags="cangenerate" duration="0.1">
        <RequiredItem items="he-kegwater,he-kegseawater" targetslot="6" type="Contained" />
        <RequiredItem items="fertilizer" targetslot="7" type="Contained" />
        <RequiredItem items="yeastshroom,slimebacteria,elastinplant,fiberplant,aquaticpoppy,he-seaweed,creepingorange,tobaccobud,saltbulb,raptorbane,bubbleberries,popnut,popnutpopped" targetslot="8" type="Contained" />
        <Sound file="%ModDir%/Content/Sounds/Items/Fabricators/hydroponics_loop.ogg" volume="1.5" range="400" loop="true" />
      </StatusEffect>
      <!--Increase timeframe by 1 each second to simulate growing if the item has the status tag "cangenerate"-->
      <StatusEffect type="OnActive" target="This" targetitemcomponent="GreaterComponent" interval="1" timeframe="1" stackable="false" disabledeltatime="true">
        <Conditional HasStatusTag="eq cangenerate" />
      </StatusEffect>
      <!--Decrease timeframe by 1 every two seconds to simulate plant withering if the item doesn't have the status tag "cangenerate"-->
      <StatusEffect type="Always" target="This" targetitemcomponent="GreaterComponent" interval="2" timeframe="-1" stackable="false" disabledeltatime="true">
        <Conditional HasStatusTag="neq cangenerate" />
      </StatusEffect>
      <!--"Use" the item if timeframe is equal to or larger than 600 to trigger the "OnUse" StatusEffects, reset the timeframe to 0 and "grow" a plant if the item has the status tag "cangenerate"-->
      <StatusEffect type="OnActive" target="This" interval="0.5" stackable="false" timeframe="0" setvalue="true" disabledeltatime="true" comparison="And">
        <Conditional HasStatusTag="eq cangenerate" />
        <Conditional TimeFrame="gte 600" />
        <Use />
      </StatusEffect>
      <!--Set light color to white when all required items are contained and the item has the active tag "cangenerate"-->
      <StatusEffect type="OnActive" target="This" lightcolor="255,255,255,111" pulseamount="0" pulsefrequency="0" powerconsumption="200" interval="1" stackable="false" setvalue="true" disabledeltatime="true">
        <Conditional HasStatusTag="eq cangenerate" />
      </StatusEffect>
      <!--Set light color to orange and pulsate when the item is on, but is missing required items-->
      <StatusEffect type="OnActive" target="This" lightcolor="255,150,0,111" pulseamount="0.75" pulsefrequency="1" powerconsumption="5" interval="1" stackable="false" setvalue="true" disabledeltatime="true">
        <Conditional HasStatusTag="neq cangenerate" />
      </StatusEffect>
      <!--Drain condition of water tank every second when powered and all required items are contained-->
      <StatusEffect type="OnActive" target="Contained" tag="waterkeg" disabledeltatime="true" condition="-0.03" delay="1" interval="1" targetslot="6" comparison="And" CheckConditionalAlways="true" stackable="false">
        <Conditional HasStatusTag="eq cangenerate" targetcontainer="true" />
      </StatusEffect>
      <!--Drain condition of fertilizer and spawn a yeast shroom when all required items are contained and the item has the active tag "cangenerate"-->
      <StatusEffect type="OnUse" target="Contained" tag="fertilizer" disabledeltatime="true" condition="-134.0" targetslot="7" comparison="And" CheckConditionalAlways="true" stackable="false">
        <Conditional HasStatusTag="eq cangenerate" targetcontainer="true" />
        <RequiredItem items="yeastshroom" targetslot="8" type="Contained" />
        <SpawnItem identifier="yeastshroom" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
      </StatusEffect>
      <!--Drain condition of fertilizer and spawn a slime bacteria when all required items are contained and the item has the active tag "cangenerate"-->
      <StatusEffect type="OnUse" target="Contained" tag="fertilizer" disabledeltatime="true" condition="-134.0" targetslot="7" comparison="And" CheckConditionalAlways="true" stackable="false">
        <Conditional HasStatusTag="eq cangenerate" targetcontainer="true" />
        <RequiredItem items="slimebacteria" targetslot="8" type="Contained" />
        <SpawnItem identifier="slimebacteria" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
      </StatusEffect>
      <!--Drain condition of fertilizer and spawn a elastin plant when all required items are contained and the item has the active tag "cangenerate"-->
      <StatusEffect type="OnUse" target="Contained" tag="fertilizer" disabledeltatime="true" condition="-134.0" targetslot="7" comparison="And" CheckConditionalAlways="true" stackable="false">
        <Conditional HasStatusTag="eq cangenerate" targetcontainer="true" />
        <RequiredItem items="elastinplant" targetslot="8" type="Contained" />
        <SpawnItem identifier="elastinplant" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
      </StatusEffect>
      <!--Drain condition of fertilizer and spawn a fiber plant when all required items are contained and the item has the active tag "cangenerate"-->
      <StatusEffect type="OnUse" target="Contained" tag="fertilizer" disabledeltatime="true" condition="-134.0" targetslot="7" comparison="And" CheckConditionalAlways="true" stackable="false">
        <Conditional HasStatusTag="eq cangenerate" targetcontainer="true" />
        <RequiredItem items="fiberplant" targetslot="8" type="Contained" />
        <SpawnItem identifier="fiberplant" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
      </StatusEffect>
      <!--Drain condition of fertilizer and spawn an aquatic poppy when all required items are contained and the item has the active tag "cangenerate"-->
      <StatusEffect type="OnUse" target="Contained" tag="fertilizer" disabledeltatime="true" condition="-134.0" targetslot="7" comparison="And" CheckConditionalAlways="true" stackable="false">
        <Conditional HasStatusTag="eq cangenerate" targetcontainer="true" />
        <RequiredItem items="aquaticpoppy" targetslot="8" type="Contained" />
        <SpawnItem identifier="aquaticpoppy" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
      </StatusEffect>
      <!--Drain condition of fertilizer and spawn an aquatic poppy when all required items are contained and the item has the active tag "cangenerate"-->
      <StatusEffect type="OnUse" target="Contained" tag="fertilizer" disabledeltatime="true" condition="-134.0" targetslot="7" comparison="And" CheckConditionalAlways="true" stackable="false">
        <Conditional HasStatusTag="eq cangenerate" targetcontainer="true" />
        <RequiredItem items="he-seaweed" targetslot="8" type="Contained" />
        <SpawnItem identifier="he-seaweed" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
      </StatusEffect>
      <!--Drain condition of fertilizer and spawn an creepingorange when all required items are contained and the item has the active tag "cangenerate"-->
      <StatusEffect type="OnUse" target="Contained" tag="fertilizer" disabledeltatime="true" condition="-134.0" targetslot="7" comparison="And" CheckConditionalAlways="true" stackable="false">
        <Conditional HasStatusTag="eq cangenerate" targetcontainer="true" />
        <RequiredItem items="creepingorange" targetslot="8" type="Contained" />
        <SpawnItem identifier="creepingorange" probability="0.95" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
        <SpawnItem identifier="badcreepingorange" probability="0.05" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
      </StatusEffect>
      <!--Drain condition of fertilizer and spawn an tobaccobud when all required items are contained and the item has the active tag "cangenerate"-->
      <StatusEffect type="OnUse" target="Contained" tag="fertilizer" disabledeltatime="true" condition="-134.0" targetslot="7" comparison="And" CheckConditionalAlways="true" stackable="false">
        <Conditional HasStatusTag="eq cangenerate" targetcontainer="true" />
        <RequiredItem items="tobaccobud" targetslot="8" type="Contained" />
        <SpawnItem identifier="tobaccobud" probability="0.9" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
        <SpawnItem identifier="badtobaccobud" probability="0.15" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
      </StatusEffect>
      <!--Drain condition of fertilizer and spawn an salbulb when all required items are contained and the item has the active tag "cangenerate"-->
      <StatusEffect type="OnUse" target="Contained" tag="fertilizer" disabledeltatime="true" condition="-134.0" targetslot="7" comparison="And" CheckConditionalAlways="true" stackable="false">
        <Conditional HasStatusTag="eq cangenerate" targetcontainer="true" />
        <RequiredItem items="saltbulb" targetslot="8" type="Contained" />
        <SpawnItem identifier="saltbulb" probability="0.95" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
        <SpawnItem identifier="badsaltbulb" probability="0.05" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
      </StatusEffect>
      <!--Drain condition of fertilizer and spawn an raptorbane when all required items are contained and the item has the active tag "cangenerate"-->
      <StatusEffect type="OnUse" target="Contained" tag="fertilizer" disabledeltatime="true" condition="-134.0" targetslot="7" comparison="And" CheckConditionalAlways="true" stackable="false">
        <Conditional HasStatusTag="eq cangenerate" targetcontainer="true" />
        <RequiredItem items="raptorbane" targetslot="8" type="Contained" />
        <SpawnItem identifier="raptorbane" probability="0.4" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
        <SpawnItem identifier="badraptorbane" probability="0.6" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
      </StatusEffect>
      <!--Drain condition of fertilizer and spawn an bubbleberries when all required items are contained and the item has the active tag "cangenerate"-->
      <StatusEffect type="OnUse" target="Contained" tag="fertilizer" disabledeltatime="true" condition="-134.0" targetslot="7" comparison="And" CheckConditionalAlways="true" stackable="false">
        <Conditional HasStatusTag="eq cangenerate" targetcontainer="true" />
        <RequiredItem items="bubbleberries" targetslot="8" type="Contained" />
        <SpawnItem identifier="bubbleberries" probability="0.6" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
        <SpawnItem identifier="badbubbleberries" probability="0.3" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
        <SpawnItem identifier="bubbleberryleaf" probability="0.1" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
      </StatusEffect>
      <!--Drain condition of fertilizer and spawn an popnut when all required items are contained and the item has the active tag "cangenerate"-->
      <StatusEffect type="OnUse" target="Contained" tag="fertilizer" disabledeltatime="true" condition="-134.0" targetslot="7" comparison="And" CheckConditionalAlways="true" stackable="false">
        <Conditional HasStatusTag="eq cangenerate" targetcontainer="true" />
        <RequiredItem items="popnut" targetslot="8" type="Contained" />
        <SpawnItem identifier="popnut" probability="0.6" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
        <SpawnItem identifier="badpopnut" probability="0.3" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
        <SpawnItem identifier="popnutleaf" probability="0.1" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
      </StatusEffect>
      <!--Drain condition of fertilizer and spawn an stabilobloom when all required items are contained and the item has the active tag "cangenerate"-->
      <StatusEffect type="OnUse" target="Contained" tag="fertilizer" disabledeltatime="true" condition="-134.0" targetslot="7" comparison="And" CheckConditionalAlways="true" stackable="false">
        <Conditional HasStatusTag="eq cangenerate" targetcontainer="true" />
        <RequiredItem items="stabilobloom" targetslot="8" type="Contained" />
        <SpawnItem identifier="stabilobloom" probability="0.65" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
        <SpawnItem identifier="stabilobloombad" probability="0.35" spawnposition="ThisInventory" spawnifcantbecontained="false" SpawnIfInventoryFull="false" />
      </StatusEffect>
    </LightComponent>
    <ItemContainer selectkey="Select" capacity="0" canbeselected="true" hideitems="true" containedstateindicatorstyle="battery" containedstateindicatorslot="0" slotsperrow="3" keepopenwhenequipped="false" movableframe="true">
      <GuiFrame relativesize="0.15,0.30" anchor="Center" relativeoffset="0,0" style="ItemUI" msg="ItemMsgInteractSelect" />
      <!--Watertank Icon-->
      <SlotIcon slotindex="6" texture="%ModDir%/Content/UI/HE-IconsAtlas.png" sourcerect="237,0,85,85" origin="0.5,0.5" />
      <!--Fertilizer Icon-->
      <SlotIcon slotindex="7" texture="%ModDir%/Content/UI/HE-IconsAtlas.png" sourcerect="322,0,85,85" origin="0.5,0.5" />
      <!--Plant Icon-->
      <SlotIcon slotindex="8" texture="%ModDir%/Content/UI/HE-IconsAtlas.png" sourcerect="407,0,85,85" origin="0.5,0.5" />
      <!--Plant Product Slots-->
      <SubContainer capacity="6" maxstacksize="3">
        <Containable items="yeastshroom,slimebacteria,elastinplant,fiberplant,aquaticpoppy,he-seaweed,stabilobloom,creepingorange,tobaccobud,saltbulb,raptorbane,bubbleberries,popnut,badcreepingorange,stabilobloombad,badtobaccobud,badsaltbulb,badraptorbane,badbubbleberries,badpopnut,bubbleberryleaf,popnutleaf" />
      </SubContainer>
      <!--Watertank Slot-->
      <SubContainer capacity="1" maxstacksize="1" slot="6">
        <Containable items="he-kegwater,he-kegseawater" />
      </SubContainer>
      <!--Fertilizer Slot-->
      <SubContainer capacity="1" maxstacksize="1" slot="7">
        <Containable items="fertilizer" />
      </SubContainer>
      <!--Plant Slot-->
      <SubContainer capacity="1" maxstacksize="1" slot="8">
        <Containable items="yeastshroom,slimebacteria,elastinplant,fiberplant,aquaticpoppy,he-seaweed,creepingorange,stabilobloom,tobaccobud,saltbulb,raptorbane,bubbleberries,popnut,badcreepingorange,badtobaccobud,badsaltbulb,badraptorbane,badbubbleberries,badpopnut" />
      </SubContainer>
      <!--Play a sound when opening the items interface-->
      <StatusEffect type="OnPicked" target="this">
        <Sound file="%ModDir%/Content/Sounds/Items/Fabricators/hydroponics_interact.ogg" volume="1" range="300" selectionmode="random" />
      </StatusEffect>
    </ItemContainer>
    <ConnectionPanel selectkey="Action" canbeselected="true" hudpriority="10" msg="ItemMsgRewireScrewdriver">
      <GuiFrame relativesize="0.2,0.32" minsize="400,350" maxsize="480,420" anchor="Center" style="ConnectionPanel" />
      <RequiredSkill identifier="electrical" level="55" />
      <StatusEffect type="OnFailure" target="Character" targetlimbs="LeftHand,RightHand">
        <Sound file="Content/Sounds/Damage/Electrocution1.ogg" range="1000" />
        <Explosion range="100.0" stun="0" force="5.0" flames="false" shockwave="false" sparks="true" underwaterbubble="false" />
        <Affliction identifier="stun" strength="4" />
        <Affliction identifier="burn" strength="5" />
      </StatusEffect>
      <!--Trigger interact sound when opening the connection panel-->
      <StatusEffect type="OnPicked" target="this">
        <Sound file="%ModDir%/Content/Sounds/Items/Electricity/junctionbox_interact.ogg" volume="1" range="300" />
      </StatusEffect>
      <RequiredItem items="screwdriver" type="Equipped" />
      <input name="power_in" displayname="connection.powerin" />
      <output name="condition_out" displayname="connection.conditionout" />
    </ConnectionPanel>
    <Holdable canbepicked="true" selectkey="Select" pickkey="Action" slots="RightHand+LeftHand" holdpos="0,-50" handle1="-10,-20" handle2="10,-20" holdangle="45" msg="ItemMsgDetachWrench" PickingTime="5.0" aimpos="65,-10" attachable="true" aimable="true">
      <RequiredItem items="wrench" type="Equipped" />
      <StatusEffect target="This" type="OnContained">
        <Conditional attached="false" targetitemcomponentname="Holdable" />
        <DropContainedItems />
      </StatusEffect>
    </Holdable>
    <Repairable selectkey="Action" header="electricalrepairsheader" deteriorationspeed="0.00" mindeteriorationdelay="60" maxdeteriorationdelay="120" RepairThreshold="70" fixDurationHighSkill="5" fixDurationLowSkill="25" msg="ItemMsgRepairScrewdriver" hudpriority="10">
      <GuiFrame relativesize="0.2,0.16" minsize="400,180" maxsize="480,280" anchor="Center" relativeoffset="0.1,0.27" style="ItemUI" />
      <RequiredSkill identifier="electrical" level="55" />
      <RequiredItem items="screwdriver" type="Equipped" />
      <ParticleEmitter particle="damagebubbles" particleburstamount="2" particleburstinterval="2.0" particlespersecond="2" scalemin="0.5" scalemax="1.5" anglemin="0" anglemax="359" velocitymin="-10" velocitymax="10" mincondition="0.0" maxcondition="50.0" />
      <ParticleEmitter particle="MistSmoke" particlespersecond="60" anglemin="0" anglemax="360" distancemin="0" distancemax="30" velocitymin="0" velocitymax="20" mincondition="0.0" maxcondition="50.0" />
      <ParticleEmitter particle="spark" particleburstamount="5" particlespersecond="5" anglemin="0" anglemax="359" velocitymin="100" velocitymax="500" particleburstinterval="2" scalemin="0.5" scalemax="1" mincondition="0.0" maxcondition="15.0" />
      <ParticleEmitter particle="fleshsmoke" particlespersecond="2" scalemin="1" scalemax="2" mincondition="0.0" maxcondition="50.0" />
      <StatusEffect type="OnFailure" target="Character" targetlimbs="LeftHand,RightHand">
        <Sound file="Content/Sounds/Damage/Electrocution1.ogg" range="1000" />
        <Affliction identifier="stun" strength="4" />
        <Affliction identifier="burn" strength="5" />
      </StatusEffect>
    </Repairable>
  </Item>
</Override>